{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/education-details/education-details.component.ts","./src/app/education-details/education-details.component.html","./src/app/email-dialog/email-dialog.component.ts","./src/app/email-dialog/email-dialog.component.html","./src/app/experience-details/experience-details.component.ts","./src/app/experience-details/experience-details.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/home-navbar/home-navbar.component.ts","./src/app/home-navbar/home-navbar.component.html","./src/app/homepage/homepage.component.ts","./src/app/homepage/homepage.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/main-homepage/main-homepage.component.ts","./src/app/main-homepage/main-homepage.component.html","./src/app/moreinfo/moreinfo.component.ts","./src/app/moreinfo/moreinfo.component.html","./src/app/my-profile/my-profile.component.ts","./src/app/my-profile/my-profile.component.html","./src/app/personal-details/personal-details.component.ts","./src/app/personal-details/personal-details.component.html","./src/app/profilesearch/profilesearch.component.ts","./src/app/profilesearch/profilesearch.component.html","./src/app/send-email/send-email.component.ts","./src/app/send-email/send-email.component.html","./src/app/service/education-details/educationdetails.service.ts","./src/app/service/education-details/educationdetails.ts","./src/app/service/experience-details/experiencedetails.service.ts","./src/app/service/experience-details/experiencedetails.ts","./src/app/service/login/login.service.ts","./src/app/service/login/user.ts","./src/app/service/personal-details/personal-details.service.ts","./src/app/service/personal-details/personal-details.ts","./src/app/service/profile-details/profile-details.service.ts","./src/app/service/profile-details/profile-details.ts","./src/app/service/register/register.service.ts","./src/app/service/register/user-registration.ts","./src/app/service/send-email/send-email.service.ts","./src/app/service/send-email/send-email.ts","./src/app/service/skill-details/skill-details.ts","./src/app/service/skill-details/skill-detais.service.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/skill-details/skill-details.component.ts","./src/app/skill-details/skill-details.component.html","./src/app/topnavbar/topnavbar.component.ts","./src/app/topnavbar/topnavbar.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EducationDetailsComponent } from './education-details/education-details.component';\nimport { ExperienceDetailsComponent } from './experience-details/experience-details.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { LoginComponent } from './login/login.component';\nimport { MainHomepageComponent } from './main-homepage/main-homepage.component';\nimport { MoreinfoComponent } from './moreinfo/moreinfo.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { PersonalDetailsComponent } from './personal-details/personal-details.component';\nimport { SendEmailComponent } from './send-email/send-email.component';\nimport { ProfilesearchComponent } from './profilesearch/profilesearch.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { SkillDetailsComponent } from './skill-details/skill-details.component';\n\nconst routes: Routes = [\n  {\n    path: '', redirectTo: 'main-homepage', pathMatch: 'full'\n  },\n  {\n    path: 'main-homepage', component: MainHomepageComponent\n  },\n  {\n    path: 'signup', component: SignupComponent\n  },\n  {\n    path: 'login', component: LoginComponent\n  },\n  {\n    path: 'homepage', component: HomepageComponent\n  },\n  {\n    path: 'personal-details', component: PersonalDetailsComponent\n  },\n  {\n    path: 'education-details', component: EducationDetailsComponent\n  },\n  {\n    path: 'experience-details', component: ExperienceDetailsComponent\n  },\n  {\n    path: 'skill-details', component: SkillDetailsComponent\n  },\n  {\n    path: 'my-profile', component: MyProfileComponent\n  },\n  {\n    path: 'moreinfo', component:MoreinfoComponent\n  },\n  {\n    path:'profilesearch', component: ProfilesearchComponent\n  },\n  {\n    path: 'my-profile', component: MyProfileComponent\n  },\n  {\n    path: 'send-email',component: SendEmailComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Learnzilla';\n}\n","<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\n\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { TopnavbarComponent } from './topnavbar/topnavbar.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { PersonalDetailsComponent } from './personal-details/personal-details.component';\nimport { EducationDetailsComponent } from './education-details/education-details.component';\nimport { ExperienceDetailsComponent } from './experience-details/experience-details.component';\nimport { SkillDetailsComponent } from './skill-details/skill-details.component';\nimport { HomepageComponent } from './homepage/homepage.component';\nimport { MoreinfoComponent } from './moreinfo/moreinfo.component';\nimport { ProfilesearchComponent } from './profilesearch/profilesearch.component';\nimport { MainHomepageComponent } from './main-homepage/main-homepage.component';\nimport { SendEmailComponent } from './send-email/send-email.component';\nimport { HomeNavbarComponent } from './home-navbar/home-navbar.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { EmailDialogComponent } from './email-dialog/email-dialog.component';\n\n@NgModule({\n  declarations: [\n    MoreinfoComponent,\n    ProfilesearchComponent,\n    MainHomepageComponent ,\n    AppComponent,\n    SignupComponent,\n    LoginComponent,\n    TopnavbarComponent,\n    FooterComponent,\n    PersonalDetailsComponent,\n    EducationDetailsComponent,\n    ExperienceDetailsComponent,\n    SkillDetailsComponent,\n    HomepageComponent,\n    SendEmailComponent,\n    HomeNavbarComponent,\n    MyProfileComponent,\n    EmailDialogComponent\n  ],\n  imports: [\n    MatPaginatorModule,\n    MatGridListModule,\n    MatDialogModule,\n    MatTabsModule,\n    MatListModule,\n    MatDividerModule,\n    MatMenuModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatCheckboxModule,\n    MatRippleModule,\n    MatChipsModule,\n    MatNativeDateModule,\n    MatSelectModule,\n    MatRadioModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    MatCardModule,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatProgressBarModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatDatepickerModule,\n    MatButtonModule,\n    MatBadgeModule,\n    HttpClientModule,\n    MatTableModule,\n    MatToolbarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component ,OnInit} from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport{Educationdetails} from '../service/education-details/educationdetails';\nimport{EducationdetailsService} from '../service/education-details/educationdetails.service';\nimport { MatSnackBar,MatSnackBarHorizontalPosition,MatSnackBarVerticalPosition,} from '@angular/material/snack-bar';\nimport { ErrorStateMatcher } from '@angular/material/core';\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid);\n  }\n}\n@Component({\n  selector: 'app-education-details',\n  templateUrl: './education-details.component.html',\n  styleUrls: ['./education-details.component.css']\n})\nexport class EducationDetailsComponent implements OnInit{\n  profileForm: FormGroup;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  centered = false;\n  user: Educationdetails = new Educationdetails();\n  registerData:EducationdetailsService;\n  matcher = new MyErrorStateMatcher();\n  constructor(private formBuilder:FormBuilder,private educationdetailservice:EducationdetailsService,private router:Router,private _snackBar: MatSnackBar){}\n  // profileForm = this.formBuilder.group({\n  //   highest_qualification:['',Validators.required],\n  //   email:['',Validators.required],\n  //   specialization:['',Validators.required],\n  //   institute_name:['',Validators.required],\n  //   passing_year:['',Validators.required],\n  //   cgpa:['',Validators.required],\n  // });\n  \n  ngOnInit():void {\n    this.profileForm = new FormGroup({\n      email:new FormControl('', [Validators.email]),\n      highest_qualification:new FormControl('',[Validators.required]),\n      specialization:new FormControl('', [Validators.required]),\n      institute_name:new FormControl('', [Validators.required]),\n      passing_year:new FormControl('',[Validators.pattern(\"^[0-9]*$\")]),\n      cgpa:new FormControl('',[Validators.required])\n    });\n    // this.email=localStorage.getItem('loginEmail')\n    if(localStorage.getItem(\"STEP_2\")){\n      var values =  JSON.parse(localStorage.getItem(\"STEP_2\"));\n      console.log(values);\n        this.profileForm.setValue({\n          highest_qualification:values.highest_qualification,\n          specialization:values.specialization,\n          institute_name:values.institute_name,\n          passing_year:values.passing_year,\n          cgpa:values.cgpa,\n          email:values.email,\n  \n     });\n  \n  }}\n  durationInSeconds = 2;\n \n  saveForm(){\n    console.log('Form data is ', this.profileForm.value);\n    localStorage.setItem(\"STEP_2\",JSON.stringify(this.profileForm.value));\n    const {email,highest_qualification,specialization,institute_name,passing_year,cgpa}=this.profileForm.value\n    this.user.email=localStorage.getItem('loginEmail')\n    this.user.highest_qualification=highest_qualification\n    this.user.specialization=specialization\n    this.user.institute_name=institute_name\n    this.user.passing_year= passing_year\n    this.user.cgpa = cgpa\n\n    if (\n      highest_qualification == \"\" ||specialization == \"\" || institute_name==\"\" || passing_year==\"\" || cgpa==\"\") {\n        // alert(\"Fields cannot be empty!\")\n        {\n          this._snackBar.open('Fields cannot be empty!', 'close', {\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,\n            duration: this.durationInSeconds * 1000,\n          });\n         \n        } \n     \n    }   \n    else{\n      this.router.navigate([\"/experience-details\"]);\n    this.educationdetailservice.addApi(this.user).subscribe(\n      (data) => {\n        // alert(\"Education Details Added SuccessFully!!\");\n        {\n          this._snackBar.open('Education Details Added SuccessFully!!', 'close', {\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,\n            duration: this.durationInSeconds * 1000,\n          });\n         \n        } \n      \n       \n      },\n      error => (console.log(error)),\n    \n   );\n    }\n  }\n  }","<app-topnavbar></app-topnavbar>\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"example-ripple-container mat-elevation-z4\" matRipple [matRippleCentered]=\"centered\"\n        [matRippleRadius]=\"66\" routerLink=\"/personal-details\">\n        <mat-icon>arrow_back_ios</mat-icon>\n    </div>\n    <div class=\"contain-content\" fxFlex=\"60%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"75%\" fxFlex.xs=\"100%\">\n            <form class=\"form-container\" [formGroup]=\"profileForm\">\n                <mat-card>\n                    <mat-card-header fxLayoutAlign=\"center\">\n                        <mat-card-title>\n                            <h2>Educational Details</h2>\n                        </mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Highest Qualification</mat-label>\n                                <input formControlName=\"highest_qualification\" matInput>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Specialization</mat-label>\n                                <input formControlName=\"specialization\" matInput>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Institute Name</mat-label>\n                                <input formControlName=\"institute_name\" matInput>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Year of Passing</mat-label>\n                                <input formControlName=\"passing_year\" matInput [errorStateMatcher]=\"matcher\"\n                                    maxlength=\"4\">\n                                <mat-error *ngIf=\"profileForm.get('passing_year').hasError('required')\">\n                                    Passing year is <strong>required</strong>\n                                </mat-error>\n                                <mat-error\n                                    *ngIf=\"!profileForm.get('passing_year').hasError('required') &&profileForm.get('passing_year').hasError('pattern')\">\n                                    enter a valid passing year\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Overall CGPA</mat-label>\n                                <input formControlName=\"cgpa\" matInput>\n                            </mat-form-field>\n                        </div>\n                    </mat-card-content>\n                    <mat-card-actions fxLayoutAlign=\"center\">\n                        <button (click)=\"saveForm()\" mat-raised-button color=\"primary\">Save & Continue</button>\n                    </mat-card-actions>\n                </mat-card>\n            </form>\n        </div>\n    </div>\n    <div class=\"example-ripple-container mat-elevation-z4\" matRipple [matRippleCentered]=\"centered\"\n        [matRippleRadius]=\"66\" routerLink=\"/experience-details\">\n        <mat-icon><span> arrow_forward_ios</span></mat-icon>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-email-dialog',\n  templateUrl: './email-dialog.component.html',\n  styleUrls: ['./email-dialog.component.css']\n})\nexport class EmailDialogComponent {\n\n}\n","<h1 mat-dialog-title>Successfully sent email to the candidate</h1>\n<div mat-dialog-content>\n    <img src=\"/assets/img/done.svg\" alt=\"\" srcset=\"\" height=\"150px\">\n    Thank you for choosing us.\n</div>\n<div mat-dialog-actions fxLayoutAlign=\"center\">\n    <button color=\"primary\" mat-button mat-dialog-close routerLink=\"/profilesearch\">Check more Profiles</button>\n</div>\n","import { Component ,OnInit} from '@angular/core';\nimport { FormControl, FormGroupDirective, NgForm, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport{Experiencedetails} from '../service/experience-details//experiencedetails';\nimport{ExperiencedetailsService} from '../service/experience-details/experiencedetails.service';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\ninterface Location {\n  value: string;\n  viewValue: string;\n}\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid);\n  }\n}\n@Component({\n  selector: 'app-experience-details',\n  templateUrl: './experience-details.component.html',\n  styleUrls: ['./experience-details.component.css']\n})\nexport class ExperienceDetailsComponent implements OnInit{\n\n  profileForm: FormGroup;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  centered = false;\n  user: Experiencedetails = new Experiencedetails();\n  registerData:ExperiencedetailsService;\n  pref_exp: Location[] = [\n    {value: 'Fresher', viewValue: 'Fresher'},\n    {value: '1-2', viewValue: '1 - 2'},\n    {value: '2-3', viewValue: '2 - 3'},\n    {value: '3-4', viewValue: '3 - 4'},\n    {value: '4-5', viewValue: '4 - 5'},\n    {value: '5+', viewValue: '5+'},\n  ]\n  matcher = new MyErrorStateMatcher();\n constructor(private formBuilder:FormBuilder,private experiencedetailservice:ExperiencedetailsService,private router:Router,private _snackBar: MatSnackBar){}\n  // profileForm = this.formBuilder.group({\n  //   email:['',Validators.required],\n  //   designation: ['',Validators.required],\n  //   companyname:['',Validators.required],\n  //   currentsalary:['',Validators.required],\n  //   noticeperiod:['',Validators.required],\n  //   experience:['',Validators.required],\n    \n  // });\n\n  ngOnInit():void {\n    this.profileForm = new FormGroup({\n      email:new FormControl('', [Validators.email]),\n      designation:new FormControl('',[Validators.required]),\n      companyname:new FormControl('', [Validators.required]),\n      currentsalary:new FormControl('', [Validators.required]),\n      noticeperiod:new FormControl('',[Validators.pattern(\"^[0-9]*$\")]),\n      experience:new FormControl('',[Validators.required])\n    });\n    // this.email=localStorage.getItem('loginEmail')\n    if(localStorage.getItem(\"STEP_3\")){\n      var values =  JSON.parse(localStorage.getItem(\"STEP_3\"));\n      console.log(values);\n        this.profileForm.setValue({\n       email:values.email,\n       designation:values.designation,\n       companyname:values.companyname,\n       currentsalary:values.currentsalary,\n       noticeperiod:values.noticeperiod,\n       experience:values.experience\n       });\n  \n  }}\n\n  durationInSeconds = 2;\n  saveForm(){\n    console.log('Form data is ', this.profileForm.value);\n    localStorage.setItem(\"STEP_3\",JSON.stringify(this.profileForm.value));\n    const {designation,companyname,currentsalary,noticeperiod,experience}=this.profileForm.value\n    this.user.email=localStorage.getItem('loginEmail')\n    this.user.designation=designation\n    this.user.companyname=companyname\n    this.user.currentsalary=currentsalary\n    this.user.noticeperiod= noticeperiod\n    this.user.experience = experience\n    //this.user.jobprofile = jobprofile\n\n    if (\n      designation == \"\" || companyname == \"\" ||currentsalary == \"\" || noticeperiod ==\"\" || experience==\"\" ) {\n        // alert(\"Fields cannot be empty!\")\n        {\n          this._snackBar.open('Fields cannot be empty!', 'close', {\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,\n            duration: this.durationInSeconds * 1000,\n          });\n         \n        }\n     \n    }  \n    else{\n      this.router.navigate([\"/skill-details\"]);\n    this.experiencedetailservice.addApi(this.user).subscribe(\n      (data) => {\n        // alert(\"Education Details Added SuccessFully!!\");\n        {\n          this._snackBar.open('Experience Details Added SuccessFully!!', 'close', {\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,\n            duration: this.durationInSeconds * 1000,\n          });\n         \n        } \n      \n       \n      },\n      error => (console.log(error)),\n    \n   );\n    }\n  }\n}","<app-topnavbar></app-topnavbar>\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"example-ripple-container mat-elevation-z4\" matRipple [matRippleCentered]=\"centered\"\n        [matRippleRadius]=\"66\" routerLink=\"/education-details\">\n        <mat-icon><span> arrow_back_ios</span></mat-icon>\n    </div>\n    <div class=\"contain-content\" fxFlex=\"60%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"75%\" fxFlex.xs=\"100%\">\n            <form class=\"form-container\" [formGroup]=\"profileForm\">\n                <mat-card>\n                    <mat-card-header fxLayoutAlign=\"center\">\n                        <mat-card-title>\n                            <h2>Experience Details</h2>\n                        </mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Your Designation</mat-label>\n                                <input formControlName=\"designation\" matInput>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Current Company Name</mat-label>\n                                <input formControlName=\"companyname\" matInput>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Current Salary</mat-label>\n                                <input formControlName=\"currentsalary\" matInput>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Total years of Experience</mat-label>\n                                <mat-select formControlName=\"experience\">\n                                    <mat-option *ngFor=\"let pref_exp of pref_exp\" [value]=\"pref_exp.value\">\n                                        {{pref_exp.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Notice Period Ex: In days</mat-label>\n                                <input formControlName=\"noticeperiod\" matInput [errorStateMatcher]=\"matcher\"\n                                    maxlength=\"2\">\n                                <mat-error *ngIf=\"profileForm.get('noticeperiod').hasError('required')\">\n                                    Notice period is <strong>required</strong>\n                                </mat-error>\n                                <mat-error\n                                    *ngIf=\"!profileForm.get('noticeperiod').hasError('required') &&profileForm.get('noticeperiod').hasError('pattern')\">\n                                    enter a valid notice period\n                                </mat-error>\n                            </mat-form-field>\n\n                        </div>\n                    </mat-card-content>\n                    <mat-card-actions fxLayoutAlign=\"center\">\n                        <button (click)=\"saveForm()\" mat-raised-button color=\"primary\">Save & Continue</button>\n                    </mat-card-actions>\n                </mat-card>\n            </form>\n        </div>\n    </div>\n    <div class=\"example-ripple-container mat-elevation-z4\" matRipple [matRippleCentered]=\"centered\"\n        [matRippleRadius]=\"66\" routerLink=\"/skill-details\">\n        <mat-icon><span> arrow_forward_ios</span></mat-icon>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n}\n","<footer class=\"main-container\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\n    <div class=\"contain-images\" fxLayout=\"row wrap\" fxFlex=\"95%\" fxLayoutAlign=\"space-between center\">\n        <div class=\"c1\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center start\">\n            <div fxLayout=\"column\" fxFlex=\"75%\" fxFlex.xs=\"85%\">\n                <h3 fxLayout=\"column\">About Us</h3>\n                <p>Welcome to Job4u! We are a team of dedicated professionals committed to helping Recruiters to find\n                    their perfect fit for the job and Job seekers to match their preferences. We value privacy and\n                    security, and we take great care to protect the\n                    personal\n                    information of our users. We are also committed to continuously improving our platform, and we\n                    regularly update our website with new features and enhancements.</p>\n            </div>\n        </div>\n        <div class=\"c2\" fxFlex=\"50%\" fxFlex.xs=\"100%\">\n            <mat-list>\n                <div>\n                    <mat-list-item fxLayoutAlign=\"center\">\n                        <h3>Contact Us</h3>\n                    </mat-list-item>\n                </div>\n                <mat-divider></mat-divider>\n                <mat-list-item>\n                    <div fxLayout=\"row\">\n                        <span><mat-icon>email</mat-icon> </span>&nbsp;\n                        <p>info@job4u.in</p>\n                    </div>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item>\n                    <div fxLayout=\"row\">\n                        <span><mat-icon>phone</mat-icon> </span>&nbsp;\n                        <p>Toll No: +91-XX-XXXXXXX | </p>\n                        <p>| Toll Free No: +91-XX-XXXXXXXX</p>\n                    </div>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item>\n                    <div fxLayout=\"row\">\n                        <p>Stay Connected: </p>\n\n                    </div>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item>\n                    <p>| Privacy Policy | Term of Use | Complaints |</p>\n                </mat-list-item>\n                <mat-divider></mat-divider>\n                <mat-list-item>\n                    <p>© 2022 job4u | All rights Reserved</p>\n                </mat-list-item>\n            </mat-list>\n\n        </div>\n    </div>\n</footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home-navbar',\n  templateUrl: './home-navbar.component.html',\n  styleUrls: ['./home-navbar.component.css']\n})\nexport class HomeNavbarComponent {\n\n}\n","<nav class=\"main-container\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\n    <div class=\"contain-images\" fxLayout=\"row \" fxFlex=\"95%\" fxLayoutAlign=\"space-between center\">\n        <div><button class=\"logo\" routerLink=\"/main-homepage\"><img src=\"/assets/img/logo.png\" height=60px></button></div>\n        <div fxLayout=\"row \" fxLayoutAlign=\"space-around center\">\n            <button fxHide fxShow.xs mat-button [matMenuTriggerFor]=\"beforeMenu\" height=\"100px\"><img\n                    src=\"/assets/img/avatar.svg\" alt=\"\" srcset=\"\" height=\"60px\"></button>\n            <mat-menu #beforeMenu=\"matMenu\" height=\"100px\" xPosition=\"before\">\n                <button mat-menu-item routerLink=\"/login\">\n                    <p>Sign in</p>\n                </button>\n                <button mat-menu-item routerLink=\"/signup\">\n                    <p>Sign up</p>\n                </button>\n            </mat-menu>\n            <div class=\"r-but\" fxLayout=\"row\" fxLayoutGap=\"10%\">\n                <div fxShow fxHide.xs><button mat-raised-button routerLink=\"/login\">Sign in</button></div>\n                <div fxShow fxHide.xs><button mat-raised-button routerLink=\"/signup\">Sign up</button></div>\n\n            </div>\n        </div>\n        <!-- <div fxLayoutAlign=\"center center\"><img src=\"/assets/img/avatar.svg\" alt=\"\" srcset=\"\" height=\"60px\"></div> -->\n    </div>\n</nav>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent {\n  }\n","<app-topnavbar></app-topnavbar>\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"contain-content\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"99.5%\" fxFlex.xs=\"100%\">\n            <mat-card fxLayout=\"row wrap\">\n                <div class=\"a\" fxLayout=\"column wrap\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n                    <h1>A Step Close To Your <span> New Job</span>.</h1>\n                    <p>Build your profile that stands out from others. Boost your career journey faster than before.</p>\n                    <div><button mat-raised-button routerLink=\"/personal-details\">Fill Your Profile</button></div>\n                </div>\n                <div class=\"b\" fxLayout=\"column wrap\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxShow fxHide.xs\n                    fxLayoutAlign=\"center center\">\n                    <img src=\"/assets/img/hacker_mindset.svg\" alt=\"\" srcset=\"\" height=\"375px\">\n                </div>\n\n            </mat-card>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\n//import { FormBuilder, Validators } from '@angular/forms';\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, Validators } from '@angular/forms';\nimport { LoginService } from '../service/login/login.service';\nimport { User } from '../service/login/user';\nimport { Router } from \"@angular/router\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  hide = true;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  // constructor(private formBuilder:FormBuilder){}\n  // profileForm = this.formBuilder.group({\n  //   email:['',Validators.required],\n  //   password:['',Validators.required],\n  //   confirmpassword:['',Validators.required]\n  // });\n \n  // saveForm(){\n  //   console.log('Form data is ', this.profileForm.value);\n  // }\n  // profileForm: FormGroup;\n  submitted = false;\n  errorMessage:string;\n \n\n  constructor(private formBuilder: FormBuilder,private loginService:LoginService,private router: Router,private _snackBar: MatSnackBar) {}\n    // this.profileForm=new FormGroup({\n    //   email:new FormControl(\"\", [Validators.required,Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]),\n    //   password:new FormControl(\"\", [Validators.required,Validators.minLength(8), Validators.maxLength(15)]),\n    //   checkbox:\n    // });\n    profileForm = this.formBuilder.group({\n      email:['',Validators.required],\n      password:['',Validators.required],\n      checkbox: [false]\n    });\n\n\n\n\n    ngOnInit(): void {\n  \n    }\n    durationInSeconds = 2;\n    \n\n    \n\n    loginObj:User=new User();\n  \n    onSubmit(): void {\n      const {email,password}=this.profileForm.value\n      if (\n        email == \"\" ||\n        password == \"\"\n        \n      ) {\n        this._snackBar.open('Field Cannot be Empty', 'close', {\n          horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,\n          duration: this.durationInSeconds * 1000,\n        });\n       \n      } \n      else if (!this.profileForm.value.checkbox ){\n        this._snackBar.open('Accept Terms and Conditions!', 'close', {\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n        duration: this.durationInSeconds * 1000,\n      });\n\n    }\n\n      // this.submitted = true;\n  \n      // if (this.form.invalid) {\n      //   return;\n      // }\n  \n      // console.log(JSON.stringify(this.form.value, null, 2));\n      else{\n\n      \n      console.log(\"FORMDATA\",this.profileForm.value);\n      this.loginObj.email=this.profileForm.value.email;\n      this.loginObj.password=this.profileForm.value.password;\n      this.loginService.loginApi(this.loginObj).subscribe(data=>{\n        console.log(\"validated\",data);\n          this.profileForm.reset();\n          localStorage.setItem(\"loginEmail\",this.loginObj.email);\n         this.router.navigate([\"/homepage\"]);\n      },\n      (\n        error=>{console.log(error);\n          {\n            this._snackBar.open('Invalid Details', 'close', {\n              horizontalPosition: this.horizontalPosition,\n              verticalPosition: this.verticalPosition,\n              duration: this.durationInSeconds * 1000,\n            });\n           \n          }\n           this.errorMessage=error.error;\n\n        }\n        )\n      )\n      }\n    }\n    email = new FormControl('', [Validators.required, Validators.email]);\n    RememberMe = false;\n    \n\n    \n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      console.log('You must enter a value');\n    }\n\n    console.log( this.email.hasError('email') ? 'Not a valid email' : '');\n  }\n}\n","<div class=\"main-container\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\n    <div class=\"contain-images\" fxLayout=\"column wrap\" fxFlex=\"40%\" fxShow fxHide.xs>\n        <div class=\"logo-view\" fxFlex=\"50%\">\n            <button class=\"logo\" routerLink=\"/main-homepage\"><img src=\" /assets/img/logo.png\" alt=\"\" srcset=\"\"\n                    height=\"150px\" fxFlex.sm=\"90%\"></button>\n        </div>\n        <div class=\"illustrate-view\" fxFlex=\"50%\">\n            <div class=\"container-x\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\n                <img src=\" /assets/img/personal_info.svg\" alt=\"\" srcset=\"\" height=\"200px\" fxFlex.sm=\"90%\">\n            </div>\n        </div>\n    </div>\n    <div class=\"contain-content\" fxFlex=\"60%\" fxFlex.xs=\"100%\"  fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"50%\" fxFlex.xs=\"85%\">\n            <form class=\"form-container\" [formGroup]=\"profileForm\">\n                <mat-card>\n                    <mat-card-header fxLayoutAlign=\"center\">\n                        <mat-card-title>\n                            <h2>Sign in to your Account</h2>\n                        </mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n\n                                <mat-label>Email</mat-label>\n                                <input formControlName=\"email\" matInput>\n                                <!-- <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error> -->\n                                <mat-icon matSuffix>email</mat-icon>\n\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                                <mat-label>Enter password</mat-label>\n                                <input formControlName=\"password\" type=\"password\" matInput\n                                    [type]=\"hide ? 'password' : 'text'\">\n                                <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                </button>\n                            </mat-form-field>\n                            <!-- <mat-checkbox class=\"example-margin\">\n                                <p> By Accepting,you agree to <br> <b>Terms of\n                                        Service</b> and <b>Privacy Policy</b></p>\n                            </mat-checkbox> -->\n                            <mat-checkbox id=\"checkbox\" class=\"checkbox\" color=\"primary\" formControlName=\"checkbox\">\n                                <p> By Accepting,you agree to <br> <b>Terms of\n                                        Service</b> and <b>Privacy Policy</b></p>\n                            </mat-checkbox>\n                            <mat-card-actions fxLayoutAlign=\"center\">\n                                <button type=\"submit\" (click)=\"onSubmit()\" mat-raised-button color=\"primary\">Sign\n                                    in</button>\n                            </mat-card-actions>\n                            <div>\n                                <p> Create New Account! <a routerLink=\"/signup\">Sign up</a></p>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {ProfileDetailsService} from '../service/profile-details/profile-details.service'\nimport { ProfileDetails } from '../service/profile-details/profile-details';\nimport { Route, Router } from '@angular/router';\nimport { MatSnackBar,MatSnackBarHorizontalPosition,MatSnackBarVerticalPosition,} from '@angular/material/snack-bar';\ninterface Location {\n  value: string;\n  viewValue: string;\n}\ninterface Experience {\n  value: string;\n  viewValue: string;\n}\ninterface SkillList {\n  value: string;\n  viewValue: string;\n}\ninterface levelList {\n  value: string;\n  viewValue: string;\n}\n\n\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-main-homepage',\n  templateUrl: './main-homepage.component.html',\n  styleUrls: ['./main-homepage.component.css']\n})\nexport class MainHomepageComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  centered = false;\n  public searchTerm : string='';\n  recommendedobj:ProfileDetails=new ProfileDetails;\n  skill:any;\n  level:any;\n  location:any;\n  experience:any;\n\n  public abc:Array<ProfileDetails>=[];\n  constructor(private formBuilder:FormBuilder, private profiledetailservice:ProfileDetailsService,private _snackBar: MatSnackBar,private router:Router){}\n    profileForm = this.formBuilder.group({\n      location:['',Validators.required],\n      skill1:['',Validators.required],\n      level1:['',Validators.required],\n     experience:['',Validators.required]   \n    });\n  \n  \n  // profileForm = this.formBuilder.group({});\n  pref_loc: Location[] = [\n    \n    {value: 'Hyderabad', viewValue: 'Hyderabad'},\n    {value: 'banglore', viewValue: 'Banglore'},\n    {value: 'Chennai', viewValue: 'Chennai'},\n    {value: 'Mumbai', viewValue: 'Mumbai'},\n    {value: 'Pune', viewValue: 'Pune'},\n    {value: 'Delhi', viewValue: 'Delhi'},\n    {value: 'Noida', viewValue: 'Noida'},\n    {value: 'Kolkata', viewValue: 'Kolkata'}\n  ];\n  \n  selectedlocation = this.pref_loc[0].value;\n\n  selectlocation(event: Event) {\n    console.log(this.selectedlocation);\n    this.selectedlocation = (event.target as HTMLSelectElement).value;\n   if(!this.selectedskill && !this.selectedexperience && !this.selectedlevel){\n    return this.profiledetailservice.getProductRecommendationsByLocation(this.selectedlocation).subscribe(data=>{\n      this.abc=data;\n      console.log(this.abc);\n\n      });\n\n      \n\n     }\n     else{\n      this.profiledetailservice.getProductRecommendationsByChoice(this.selectedlocation,this.selectedskill,this.selectedexperience,this.selectedlevel)\n     }\n   }\n   peopleByCountry: any[] = [\n    {\n      'country': 'UK',\n      'people': [\n        {\n          \"name\": \"Douglas  Pace\"\n        },\n        {\n          \"name\": \"Mcleod  Mueller\"\n        },\n      ]\n    },\n    {\n      'country': 'US',\n      'people': [\n        {\n          \"name\": \"Day  Meyers\"\n        },\n        {\n          \"name\": \"Aguirre  Ellis\"\n        },\n        {\n          \"name\": \"Cook  Tyson\"\n        }\n      ]\n    }\n  ];\n  pref_exp: Experience[] = [\n    {value: 'Fresher', viewValue: 'Fresher'},\n    {value: '1 - 2', viewValue: '1 - 2'},\n    {value: '2 - 3', viewValue: '2 - 3'},\n    {value: '3 - 4', viewValue: '3 -4'},\n    {value: '4 - 5', viewValue: '4 - 5'},\n    {value: '5+', viewValue: '5+'},\n  ]\n  selectedexperience = this.pref_loc[0].value;\n\n  selectexperience(event: Event) {\n    console.log(this.selectedexperience);\n    this.selectedexperience = (event.target as HTMLSelectElement).value;\n   if(!this.selectedskill && !this.selectedlevel && !this.selectedlocation){\n    return this.profiledetailservice.getProductRecommendationsByExperience(this.selectedexperience).subscribe(data=>{\n      this.abc=data;\n      console.log(this.abc);\n\n      });\n     }\n     else{\n      this.profiledetailservice.getProductRecommendationsByChoice(this.selectedlocation,this.selectedskill,this.selectedexperience,this.selectedlevel)\n     }\n   }\n  pref_skill: SkillList[] = [\n    {value: 'Angular', viewValue: 'Angular'},\n    {value: 'Html', viewValue: 'Html'},\n    {value: 'Css', viewValue: 'Css'},\n    {value: 'Javascript', viewValue: 'Javascript'},\n    {value: 'Neo4j', viewValue: 'Neo4j'},\n    {value: 'C', viewValue: 'C'},\n    {value: 'C++', viewValue: 'C++'},\n    {value: 'Java', viewValue: 'Java'},\n    {value: 'Python', viewValue: 'Python'},   \n  ];\n  selectedskill = this.pref_loc[0].value;\n\n  selectskill(event: Event) {\n    console.log(this.selectedskill);\n    this.selectedskill = (event.target as HTMLSelectElement).value;\n   if(!this.selectedexperience && !this.selectedlocation){\n    return this.profiledetailservice.getProductRecommendationsBySkill(this.selectedskill,this.selectedlevel).subscribe(data=>{\n      this.abc=data;\n      console.log(this.abc);\n \n      });\n     }\n     else{\n      this.profiledetailservice.getProductRecommendationsByChoice(this.selectedlocation,this.selectedskill,this.selectedexperience,this.selectedlevel)\n     }\n   }\n  pref_level: levelList[] = [\n    {value: 'Basic', viewValue: 'Basic'},\n    {value: 'Intermediate', viewValue: 'Intermediate'},\n    {value: 'Advance', viewValue: 'Advance'},\n  ];\n  selectedlevel = this.pref_loc[0].value;\n\n  selectlevel(event: Event) {\n    console.log(this.selectedlevel);\n    this.selectedlevel = (event.target as HTMLSelectElement).value;\n   \n    this.profiledetailservice.getProductRecommendationsByChoice(this.selectedlevel,this.selectedexperience,this.selectedlocation,this.selectedskill).subscribe(data=>{\n      this.abc=data;\n      console.log(this.abc);\n\n      });\n\n      \n\n     \n   } \n\n  ngOnInit(): void {\n  //   if(localStorage.getItem(\"STEP_5\")){\n  //     var values =  JSON.parse(localStorage.getItem(\"STEP_5\"));\n  //     console.log(values);\n  //       this.profileForm.setValue({\n  //         skill1:values.skill1,\n  //         location:values.location,\n  //      experience:values.experience,\n  //      level1:values.level1\n  //      });\n  // }\n}\n  \n  durationInSeconds = 2;\n  search(){\n        console.log(this.profileForm.value);\n        // if(this.profileForm.value.location == ''){\n        //   alert(\"location cannot be empty\");\n        // }\n        localStorage.setItem(\"SEARCH_KEY\",JSON.stringify(this.profileForm.value));\n        this.router.navigate([\"/profilesearch\"]);\n  //   localStorage.setItem(\"STEP_5\",JSON.stringify(this.profileForm.value));\n  //   console.log(this.profileForm.value);\n  //   const {skill1,location,level1,experience}=this.profileForm.value\n  //   this.recommendedobj.skill1=skill1\n  //   this.recommendedobj.location=location\n  //   this.recommendedobj.level1=level1\n  //   this.recommendedobj.experience=experience\n\n  //   // this.recommendedobj.location=this.profileForm.value.location\n  //   // this.recommendedobj.skill1 =this.profileForm.value.skill1\n  //   // this.recommendedobj.level1=this.profileForm.value.level1\n  //   // this.recommendedobj.experience=this.profileForm.value.experience\n  //   this.profiledetailservice.getProductRecommendationsByChoice(this.recommendedobj.location,this.recommendedobj.skill1,this.recommendedobj.experience,this.recommendedobj.level1).subscribe(\n  //     (data) => {\n  //       console.log(data);\n\n  //       // alert(\"Education Details Added SuccessFully!!\");\n  //       {\n  //         this._snackBar.open('profile details!!', 'close', {\n  //           horizontalPosition: this.horizontalPosition,\n  //           verticalPosition: this.verticalPosition,\n  //           duration: this.durationInSeconds * 1000,\n  //         });\n         \n  //       } \n      \n       \n  //     },\n  //     error => (console.log(error)),\n    \n  //  );\n    \n// this.searchTerm = (event.target as HTMLInputElement).value;\n//      console.log(this.searchTerm);\n//   }\n}\n\n}","<app-home-navbar></app-home-navbar>\n<form [formGroup]=\"profileForm\">\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"contain-content\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"100%\" fxFlex.xs=\"100%\">\n            <mat-card fxLayout=\"row wrap\">\n                <div class=\"a\" fxLayout=\"column wrap\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n                    <h1>Find Your Best Fit.</h1>\n                    <p>Find.<span> Connect.</span> Recruit</p>\n                </div>\n                <div class=\"b\" fxLayout=\"column wrap\" fxFlex=\"100%\" fxFlex.xs=\"90%\" fxLayoutAlign=\"center center\">\n                    <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"center\">\n                        <mat-tab label=\"Manual\">\n                            <div fxLayout=\"row\" fxFlex.xs=\"100%\" fxlayoutGap=\"15%\" fxLayoutAlign=\"center center\">\n                                <div fxLayout=\"row\" fxFlex.xs=\"100%\" class=\"search-main\" fxLayoutAlign=\"center center\">\n                                    <table cellspacing=\"0\">\n                                        <tr>\n                                            <!-- <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n\n                                                    <input matInput placeholder=\"Ex. FrontEnd devloper\">\n                                                </mat-form-field></td> -->\n                                                <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n                                                    <mat-label>Preferred Skill</mat-label>\n                                                    <mat-select formControlName=\"skill1\" matNativeControl (change)=\"selectskill($event)\">\n                                                        <mat-option *ngFor=\"let pref_skl of pref_skill\"\n                                                            [value]=\"pref_skl.value\" [selected]=\"selectedskill === pref_skl.value\">\n                                                            {{pref_skl.viewValue}}\n                                                        </mat-option>\n                                                    </mat-select>\n                                                </mat-form-field></td>\n                                                <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n                                                    <mat-label>Preferred Level</mat-label>\n                                                    <mat-select  formControlName=\"level1\" matNativeControl (change)=\"selectlevel($event)\">\n                                                        <mat-option *ngFor=\"let pref_lvl of pref_level\"\n                                                            [value]=\"pref_lvl.value\" [selected]=\"selectedlevel === pref_lvl.value\">\n                                                            {{pref_lvl.viewValue}}\n                                                        </mat-option>\n                                                    </mat-select>\n                                                </mat-form-field></td>\n                                            <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n                                                    <mat-label>Preferred Location</mat-label>\n                                                    <mat-select  formControlName=\"location\" matNativeControl (change)=\"selectlocation($event)\">\n                                                        <mat-option *ngFor=\"let pref_loc of pref_loc\"\n                                                            [value]=\"pref_loc.value\" [selected]=\"selectedlocation === pref_loc.value\">\n                                                            {{pref_loc.viewValue}}\n                                                        </mat-option>\n                                                    </mat-select>\n                                                </mat-form-field></td>\n                                            <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n                                                    <mat-label>Experience</mat-label>\n                                                    <mat-select formControlName=\"experience\" matNativeControl (change)=\"selectexperience($event)\">\n                                                        <mat-option *ngFor=\"let pref_exp of pref_exp\"\n                                                            [value]=\"pref_exp.value\"[selected]=\"selectedexperience === pref_exp.value\">\n                                                            {{pref_exp.viewValue}}\n                                                        </mat-option>\n                                                    </mat-select>\n                                                </mat-form-field></td>\n                                            <td>\n                                                <button mat-raised-button (click)=\"search()\">Search</button>\n                                            </td>\n                                        </tr>\n                                    </table>\n\n                                </div>\n                            </div>\n                        </mat-tab>\n                        <mat-tab label=\"Voice\">\n                            <div class=\"voice search-main\" fxLayoutAlign=\"center center\" fxFlex.xs=\"100%\">\n                                <table cellspacing=\"0\">\n                                    <tr>\n                                        <td><mat-form-field class=\"voice-in\" appearance=\"fill\">\n                                                <input matInput placeholder=\"Voice search....\">\n                                            </mat-form-field></td>\n                                        <td>\n                                            <button mat-raised-button><mat-icon matSuffix>mic</mat-icon></button>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </mat-tab>\n                    </mat-tab-group>\n                </div>\n                <div class=\"c\" fxLayout=\"row wrap\" fxShow fxHide.xs fxFlex=\"100%\" fxFlex.xs=\"90%\"\n                fxLayoutAlign=\"start center\">\n                <img src=\"/assets/img/people_search.svg\" height=\"150px\" alt=\"\">\n            </div>\n            </mat-card>\n        </div>\n    </div>\n</div>\n</form>\n<div class=\"p2\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxHide.xs fxShow>\n    <div class=\"contain-content\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"100%\" fxFlex.xs=\"100%\">\n            <mat-card fxLayout=\"row wrap\">\n                <div class=\"ab\" fxLayout=\"column wrap\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n                    <img src=\"/assets/img/searching.svg\" height=\"200px\" alt=\"\" srcset=\"\">\n                    <h1><span> Search...</span></h1>\n                    <p>Reach out to jobseekers and hire quickly with our fast and easy search, according to your\n                        preferences.</p>\n                </div>\n                <div class=\"cards-pass\" fxLayout=\"column wrap\" fxFlex=\"50%\" fxFlex.xs=\"100%\"\n                    fxLayoutAlign=\"center center\">\n                    <div fxLayout=\"row \" fxLayoutGap=\"3%\">\n                        <div class=\"card-in\">\n                            <img src=\"/assets/img/team.svg\" height=\"150px\" alt=\"\" srcset=\"\">\n                            <p><span>C</span>andidates can submit profiles to increase their chances to connect with\n                                you to create\n                                oppurtunities and excel in\n                                their careers.</p>\n                        </div>\n                        <div class=\"card-in\">\n                            <h1>Hire Right</h1>\n                            <ul>\n                                <li>\n                                    <div fxLayout=\"row\" fxLayoutGap=\"5%\">\n                                        <mat-icon>check</mat-icon>\n                                        <h3>Skills</h3>\n                                    </div>\n                                </li>\n                                <li>\n                                    <div fxLayout=\"row\" fxLayoutGap=\"5%\">\n                                        <mat-icon>check</mat-icon>\n                                        <h3>Skill level</h3>\n                                    </div>\n                                </li>\n                                <li>\n                                    <div fxLayout=\"row\" fxLayoutGap=\"5%\">\n                                        <mat-icon>check</mat-icon>\n                                        <h3>Experience</h3>\n                                    </div>\n                                </li>\n                                <li>\n                                    <div fxLayout=\"row\" fxLayoutGap=\"5%\">\n                                        <mat-icon>check</mat-icon>\n                                        <h3>....</h3>\n                                    </div>\n                                </li>\n                            </ul>\n                            <div fxLayoutAlign=\"center\">\n                                <img src=\"/assets/img/home_run.svg\" height=\"100px\" alt=\"\">\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </mat-card>\n        </div>\n    </div>\n</div>\n<div class=\"p3\" fxLayout=\"row\" fxLayoutAlign=\"center center\" fxHide.xs fxShow>\n    <div class=\"contain-content\" fxFlex=\"100%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"100%\" fxFlex.xs=\"100%\">\n            <mat-card fxLayout=\"row wrap\">\n                <div fxFlex=\"50%\" fxLayoutAlign=\"center center\">\n\n                    <div class=\"sm-card\" fxLayoutAlign=\"center center\">\n                        <div>\n                            <img src=\"/assets/img/programming.svg\" height=\"350px\" alt=\"\" srcset=\"\">\n                        </div>\n                    </div>\n                </div>\n                <div class=\"aba\" fxLayout=\"column wrap\" fxFlex=\"50%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n\n                    <h3><span> Find the Best Talent who are prefect for your organisation</span></h3>\n                    <div fxLayout=\"row\" fxLayoutGap=\"10%\" fxLayoutAlign=\"bottom center\">\n                        <div class=\"sm-card\">\n                            <img src=\"/assets/img/programmer.svg\" height=\"100px\" alt=\"\" srcset=\"\">\n                        </div>\n\n                        <div class=\"sm-card\">\n                            <img src=\"/assets/img/web_developer.svg\" height=\"100px\" alt=\"\" srcset=\"\">\n                        </div>\n                        <div class=\"sm-card\">\n                            <img src=\"/assets/img/mobile_development.svg\" height=\"100px\" alt=\"\" srcset=\"\">\n                        </div>\n                    </div>\n                </div>\n            </mat-card>\n        </div>\n    </div>\n</div>\n\n<app-footer></app-footer>\n","import { Component ,OnInit} from '@angular/core';\n@Component({\n  selector: 'app-moreinfo',\n  templateUrl: './moreinfo.component.html',\n  styleUrls: ['./moreinfo.component.css']\n})\nexport class MoreinfoComponent implements OnInit {\n  username:String;\n  location:String;\n  email:String;\n  dob:String;\n  gender:String;\n  contactnumber:String;\n  highest_qualification:string;\n  specialization:string;\n  institute_name:string;\n  passing_year:string;\n  cgpa:string;\n  designation:string;\n  companyname:string;\n  noticeperiod:string;\n  experience:string;\n  currentsalary:string;\n  skill1:string;\n  skill2:string;\n  skill3:string;\n  level1:string;\n  level2:string;\n  level3:string;\n  ngOnInit():void {\n    // this.email=localStorage.getItem('loginEmail')\n    if(localStorage.getItem(\"CURRENT_USER\")!=null){\n      var values =  JSON.parse(localStorage.getItem(\"CURRENT_USER\"));\n          this.username=values.username\n          this.location=values.location\n          this.email=values.email\n          this.dob =values.dob\n          this.gender=values.gender\n          this.contactnumber=values.contactnumber\n          this.highest_qualification=values.highest_qualification\n          this.specialization=values.specialization\n          this.institute_name=values.institute_name\n          this.passing_year=values.passing_year\n          this.cgpa=values.cgpa\n          this.designation=values.designation\n          this.companyname=values.companyname\n          this.noticeperiod=values.noticeperiod\n          this.experience=values.experience\n          this.currentsalary=values.currentsalary\n          this.skill1=values.skill1\n          this.skill2=values.skill2\n          this.skill3=values.skill3\n          this.level1=values.level1\n          this.level2=values.level2\n          this.level3=values.level3\n      }\n    }\n}","<app-home-navbar></app-home-navbar>\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n  <div class=\"contain-content\" fxFlex=\"40%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n    <div class=\"part-prime\" fxFlex=\"75%\" fxFlex.xs=\"100%\">\n\n      <mat-card class=\"example-card\">\n        <mat-card-header>\n          <mat-card-title-group>\n            <mat-card-title><mat-icon>face</mat-icon> {{username}}</mat-card-title>\n            <!-- <mat-card-subtitle>FrontEnd Devloper</mat-card-subtitle> -->\n            <img mat-card-sm-image src=\"/assets/img/pic_profile.svg\">\n          </mat-card-title-group>\n        </mat-card-header>\n        <mat-card-content>\n          <p><mat-icon>cake</mat-icon> Date of Birth - {{dob}}</p>\n          <p><mat-icon>email</mat-icon> Email - {{email}}</p>\n          <p><mat-icon>person</mat-icon> Gender - {{gender}}</p>\n          <p><mat-icon>call</mat-icon> Phone Number - {{contactnumber}} </p>\n          <p><mat-icon>pin_drop</mat-icon> Preffered Location - {{location}}</p>\n\n          <p><mat-icon>history_edu</mat-icon> Highest Qualification - {{highest_qualification}} </p>\n          <p><mat-icon>school</mat-icon> Institute name - {{institute_name}}</p>\n          <p><mat-icon>work</mat-icon> Specialization - {{specialization}}</p>\n          <p><mat-icon>workspace_premium</mat-icon> CGPA - {{cgpa}} </p>\n          <p><mat-icon>today</mat-icon> Passing-year - {{passing_year}}</p>\n\n          <p><mat-icon>badge</mat-icon> Designation - {{designation}}</p>\n          <p><mat-icon>apartment</mat-icon> Experience - {{experience}}</p>\n          <p><mat-icon>work_history</mat-icon> Notice Period - {{noticeperiod}} Days</p>\n          <p><mat-icon>paid</mat-icon> Current Salary - {{currentsalary}}</p>\n\n          <p><mat-icon>lan</mat-icon> Skill Set -\n            {{skill1}}-{{level1}},{{skill2}}-{{level2}},{{skill3}}-{{level3}}</p>\n          <p></p>\n        </mat-card-content>\n        <mat-card-actions fxLayoutAlign=\"space-between center\">\n          <button routerLink=\"/profilesearch\" mat-raised-button color=\"warn\"><mat-icon>keyboard_backspace</mat-icon>\n            Back</button>\n          <button routerLink=\"/send-email\" mat-raised-button color=\"primary\"><mat-icon>thumb_up</mat-icon>\n            Intersted</button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n    <div class=\"c\" fxLayout=\"row wrap\" fxShow fxHide.xs fxFlex=\"100%\" fxFlex.xs=\"90%\" fxLayoutAlign=\"start center\">\n      <img src=\"/assets/img/proud_coder.svg\" height=\"150px\" alt=\"\">\n    </div>\n  </div>\n</div>\n\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport{SkillDetails} from '../service/skill-details/skill-details';\nimport{SkillDetaisService} from '../service/skill-details/skill-detais.service';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {ProfileDetailsService} from '../service/profile-details/profile-details.service'\nimport { ProfileDetails } from '../service/profile-details/profile-details';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.css']\n})\nexport class MyProfileComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  centered = false;\n  public profiledata:any;\n  user: ProfileDetails = new ProfileDetails();\n    posts;\n    username:String;\n    location:String;\n    email:String;\n    dob:String;\n    gender:String;\n    contactnumber:String;\n    highest_qualification:string;\n    specialization:string;\n    institute_name:string;\n    passing_year:string;\n    cgpa:string;\n    designation:string;\n    companyname:string;\n    noticeperiod:string;\n    experience:string;\n    currentsalary:string;\n    skill1:string;\n    skill2:string;\n    skill3:string;\n    level1:string;\n    level2:string;\n    level3:string;\n  \n    constructor(private formBuilder:FormBuilder,private router:Router,private profiledetailservice:ProfileDetailsService,private _snackBar: MatSnackBar){}\n  form = this.formBuilder.group({\n    username:['',Validators.required],\n \n  })\n  // });ngOnInit():void {\n    // this.email=localStorage.getItem('loginEmail')\n  \n    ngOnInit():void {\n   // this.username = \"soniya\";\n      this.email=localStorage.getItem('loginEmail')\n      if(localStorage.getItem(\"STEP_1\")!=null){\n        var values =  JSON.parse(localStorage.getItem(\"STEP_1\"));\n            this.username=values.username\n            this.location=values.location\n            this.dob =values.dob\n            this.gender=values.gender\n            this.contactnumber=values.contactnumber\n       \n        }\n        if(localStorage.getItem(\"STEP_2\")!=null){\n          var values =  JSON.parse(localStorage.getItem(\"STEP_2\"));\n              this.highest_qualification=values.highest_qualification\n              this.specialization=values.specialization\n              this.institute_name=values.institute_name\n              this.passing_year=values.passing_year\n              this.cgpa=values.cgpa\n        \n          }\n          if(localStorage.getItem(\"STEP_3\")!=null){\n            var values =  JSON.parse(localStorage.getItem(\"STEP_3\"));\n                this.designation=values.designation\n                this.companyname=values.companyname\n                this.noticeperiod=values.noticeperiod\n                this.experience=values.experience\n                this.currentsalary=values.currentsalary\n          \n            }\n            if(localStorage.getItem(\"STEP_4\")!=null){\n              var values =  JSON.parse(localStorage.getItem(\"STEP_4\"));\n                this.skill1=values.skill1\n                this.level1=values.level1\n                this.skill2=values.skill2\n                this.level2=values.level2\n                this.skill3=values.skill3\n                this.level3=values.level3\n            \n              }\n              \n  \n\n      }\n      durationInSeconds = 2;\n      deleteprofile(){\n        this.profiledetailservice.deleteproductbyId(localStorage.getItem(\"loginEmail\")).subscribe((data) => {\n          window.localStorage.removeItem('loginEmail')\n    window.localStorage.removeItem('STEP_1');\n  window.localStorage.removeItem('STEP_2');\n  window.localStorage.removeItem('STEP_3');\n  window.localStorage.removeItem('STEP_4');\n          // this.profiledata = data;\n          // console.log(this.profiledata);\n          // this.email = this.profiledata.email;\n          // this.username = this.profiledata.username;\n          // this.contactnumber = this.profiledata.contactnumber;\n          // this.dob = this.profiledata.dob;\n          // this.gender = this.profiledata.gender;\n          // this.location = this.profiledata.location;\n          // this.highest_qualification = this.profiledata.highest_qualification;\n          // this.specialization = this.profiledata.specialization;\n          // this.institute_name = this.profiledata.institute_name;\n          // this.passing_year = this.profiledata.passing_year;\n          // this.cgpa = this.profiledata.cgpa;\n          // this.designation = this.profiledata.designation;\n          // this.companyname = this.profiledata.companyname;\n          // this.noticeperiod = this.profiledata.noticeperiod;\n          // this.experience = this.profiledata.experience;\n          // this.currentsalary = this.profiledata.currentsalary;\n          // this.skill1 = this.profiledata.skill1;\n          // this.skill2 = this.profiledata.skill2;\n          // this.skill3 = this.profiledata.skill3;\n          // this.level1 = this.profiledata.level1;\n          // this.level2 = this.profiledata.level2;\n          // this.level3 = this.profiledata.level3;\n        // });\n    //   this.profiledetailservice.deleteproductbyId(this.profiledata)\n    // .subscribe((data) =>{\n      // alert(\"Education Details Added SuccessFully!!\");\n      {\n        this._snackBar.open('User Deleted SuccessFully!!', 'close', {\n          horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,\n          duration: this.durationInSeconds * 1000,\n        });\n       \n      } \n      \n      \n    },\n    error => (console.log(error)),\n\n);\n  }\n}\n","<app-topnavbar></app-topnavbar>\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"contain-content\" fxFlex=\"85%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"100%\" fxFlex.xs=\"100%\">\n            <mat-card>\n                <div fxLayout=\"row wrap\">\n                    <div class=\"a\" fxLayout=\"row wrap\" fxFlex=\"50%\" fxFlex.sm=\"100%\" fxFlex.xs=\"100%\"\n                        fxLayoutAlign=\"center center\">\n                        <h2>Personal</h2>\n                        <mat-divider></mat-divider>\n                        <mat-list fxFlex=\"70%\" fxFlex.xs=\"100%\">\n                            <div>\n                                <mat-list-item>\n\n                                    <p><strong>Name -</strong> {{username}}</p>\n\n                                    <!-- <input placeholder=\"username\" formControlName=\"username\"> -->\n                                    <!-- <p>[(ngModel)]=\"profiledetails.name\">{{profiledetails.name}}</p> -->\n                                </mat-list-item>\n                            </div>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Email -</strong> {{email}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Phone Number -</strong> {{contactnumber}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Date Of Birth -</strong> {{dob}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Gender -</strong> {{gender}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Preferred Location :</strong>{{location}}</p>\n                            </mat-list-item>\n                        </mat-list>\n\n                    </div>\n                    <div class=\"b\" fxLayout=\"row wrap\" fxFlex=\"50%\" fxFlex.sm=\"100%\" fxFlex.xs=\"100%\"\n                        fxLayoutAlign=\"center center\">\n                        <h2>Education</h2>\n                        <mat-divider></mat-divider>\n                        <mat-list fxFlex=\"70%\" fxFlex.xs=\"100%\">\n                            <mat-list-item>\n                                <p><strong>Highest Qualification -</strong> {{highest_qualification}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Specialization -</strong> {{specialization}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Institue Name - </strong> {{institute_name}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Year of Passing - </strong> {{passing_year}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Overall CGPA - </strong> {{cgpa}}</p>\n                            </mat-list-item>\n                        </mat-list>\n                    </div>\n                </div>\n\n                <div fxLayout=\"row wrap\">\n                    <div class=\"c\" fxLayout=\"row wrap\" fxFlex=\"50%\" fxFlex.sm=\"100%\" fxFlex.xs=\"100%\"\n                        fxLayoutAlign=\"center center\">\n                        <h2>Experience</h2>\n                        <mat-divider></mat-divider>\n                        <mat-list fxFlex=\"70%\" fxFlex.xs=\"100%\">\n                            <mat-list-item>\n                                <p><strong>Your Designation -</strong> {{designation}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Current Comany name -</strong> {{companyname}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Current Salary -</strong> {{currentsalary}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Total Years Of Experience -</strong> {{experience}}</p>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <p><strong>Notice Period -</strong> {{noticeperiod}}</p>\n                            </mat-list-item>\n                        </mat-list>\n                    </div>\n                    <div class=\"d\" fxLayout=\"row wrap\" fxFlex=\"50%\" fxFlex.sm=\"100%\" fxFlex.xs=\"100%\"\n                        fxLayoutAlign=\"center center\">\n                        <h2>Skills</h2>\n                        <mat-divider></mat-divider>\n                        <mat-list fxFlex=\"70%\" fxFlex.xs=\"100%\">\n                            <mat-list-item>\n                                <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\n                                    <p><strong>Skill 1 -</strong> {{skill1}}</p>\n                                    <p><strong>Level -</strong> {{level1}}</p>\n                                </div>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\n                                    <p><strong>Skill 2 -</strong> {{skill2}}</p>\n                                    <p><strong>Level -</strong> {{level2}}</p>\n                                </div>\n                            </mat-list-item>\n                            <mat-divider></mat-divider>\n                            <mat-list-item>\n                                <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-evenly center\">\n                                    <p><strong>Skill 3 -</strong> {{skill3}}</p>\n                                    <p><strong>Level -</strong> {{level3}}</p>\n                                </div>\n                            </mat-list-item>\n                        </mat-list>\n                    </div>\n                </div>\n                <mat-card-actions fxLayoutAlign=\"center\">\n                    <div class=\"button\" fxLayout=\"row\" fxLayoutGap=\"20px\" fxLayoutAlign=\"end\">\n                        <button mat-raised-button color=\"primary\" routerLink=\"/personal-details\">Update</button>\n                        <button mat-raised-button color=\"warn\" (click)=\"deleteprofile()\">Reset</button>\n                    </div>\n                </mat-card-actions>\n            </mat-card>\n        </div>\n    </div>\n</div>","import { Component ,OnInit} from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport{PersonalDetails} from '../service/personal-details/personal-details';\nimport{PersonalDetailsService} from '../service/personal-details/personal-details.service';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormControl, FormGroupDirective, NgForm, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {filter} from \"rxjs/operators\";\nimport { of } from 'rxjs';\nimport { debounceTime, switchMap } from 'rxjs/operators';\ninterface Location {\n  value: string;\n  viewValue: string;\n}\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid);\n  }\n}\n@Component({\n  selector: 'app-personal-details',\n  templateUrl: './personal-details.component.html',\n  styleUrls: ['./personal-details.component.css']\n})\n\nexport class PersonalDetailsComponent implements OnInit {\n  profileForm: FormGroup;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  centered = false;\n  user: PersonalDetails = new PersonalDetails();\n  registerData:PersonalDetailsService;\n\n  contactnumberPattern = new RegExp(\n    /(^$|[0-9]{10})/\n  );\n\n\n  matcher = new MyErrorStateMatcher();\n\n  constructor(private formBuilder:FormBuilder,private personalDetailservice:PersonalDetailsService,private router:Router,private _snackBar: MatSnackBar){}\n  pref_loc: Location[] = [\n    {value: 'Hyderabad', viewValue: 'Hyderabad'},\n    {value: 'Banglore', viewValue: 'Banglore'},\n    {value: 'Chennai', viewValue: 'Chennai'},\n    {value: 'Mumbai', viewValue: 'Mumbai'},\n    {value: 'Pune', viewValue: 'Pune'},\n    {value: 'Delhi', viewValue: 'Delhi'},\n    {value: 'Noida', viewValue: 'Noida'},\n    {value: 'Kolkata', viewValue: 'Kolkata'}\n  ];\n  \n\n\n ngOnInit():void {\n  this.profileForm = new FormGroup({\n    email:new FormControl('', [Validators.email]),\n    username:new FormControl('',[Validators.required]),\n    location:new FormControl('', [Validators.required]),\n    gender:new FormControl('', [Validators.required]),\n    contactnumber:new FormControl('',[Validators.pattern('[6-9]\\\\d{9}')]),\n    dob:new FormControl('',[Validators.required])\n  });\n  if(localStorage.getItem(\"STEP_1\")){\n    var values =  JSON.parse(localStorage.getItem(\"STEP_1\"));\n    console.log(values);\n      this.profileForm.setValue({\n     username:values.username,\n     email:values.email,\n     dob:values.dob,\n     gender:values.gender,\n     contactnumber:values.contactnumber,\n     location:values.location\n   });\n\n}}\ndurationInSeconds = 2;\n\n saveForm(){\n   console.log('Form data is ', this.profileForm.value);\n   console.log('Form data is ', this.profileForm.value);\n   localStorage.setItem(\"STEP_1\",JSON.stringify(this.profileForm.value));\n   const {email,username,contactnumber,dob,location,gender}=this.profileForm.value\n   this.user.email=localStorage.getItem('loginEmail')\n   this.user.username=username\n   this.user.contactnumber=contactnumber\n   this.user.dob=dob\n   this.user.location=location\n   this.user.gender=gender\n   if (\n    username == \"\" ||contactnumber == \"\" || dob ==\"\" || location==\"\" || gender==\"\") {\n      // alert(\"Fields cannot be empty!\")\n      {\n        this._snackBar.open('Fields cannot be empty!', 'close', {\n          horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,\n          duration: this.durationInSeconds * 1000,\n        });\n       \n      } \n   \n  } \n  else{\n    console.log(\"else part\")\n    this.router.navigate([\"/education-details\"]);\n   this.personalDetailservice.addApi(this.user).subscribe(\n     (data) => {\n      //  console.log(\"Personal Details Added SuccessFully!!\");\n      {\n        this._snackBar.open('Personal Details Added SuccessFully', 'close', {\n          horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,\n          duration: this.durationInSeconds * 1000,\n        });\n       \n      } \n  \n  \n      \n     },\n     error => (console.log(error)),\n   \n  );\n }\n }\n}\n","<app-topnavbar></app-topnavbar>\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"example-ripple-container mat-elevation-z4\" matRipple [matRippleCentered]=\"centered\"\n        [matRippleRadius]=\"66\" routerLink=\"/fill-details\">\n        <mat-icon></mat-icon>\n    </div>\n    <div class=\"contain-content\" fxFlex=\"60%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"75%\" fxFlex.xs=\"100%\">\n            <form class=\"form-container\" [formGroup]=\"profileForm\">\n                <mat-card>\n                    <mat-card-header fxLayoutAlign=\"center\">\n                        <mat-card-title>\n                            <h2>Profile Details</h2>\n                        </mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Full Name</mat-label>\n                                <input formControlName=\"username\" matInput>\n                            </mat-form-field>\n                            <!-- <mat-form-field class=\"full-width\">\n                                <input formControlName=\"email\" matInput placeholder=\"Email\">\n                            </mat-form-field> -->\n                            <mat-form-field class=\"full-width\">\n                                <mat-label>Phone Number</mat-label>\n                                <input matInput placeholder=\"Phone Numer\" formControlName=\"contactnumber\"\n                                    [errorStateMatcher]=\"matcher\" maxlength=\"10\">\n                                <mat-error *ngIf=\"profileForm.get('contactnumber').hasError('required')\">\n                                    Phone number is <strong>required</strong>\n                                </mat-error>\n                                <mat-error\n                                    *ngIf=\"!profileForm.get('contactnumber').hasError('required') &&profileForm.get('contactnumber').hasError('pattern')\">\n                                    Please enter valid number\n                                </mat-error>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\n                                <mat-label>Select DOB</mat-label>\n                                <input formControlName=\"dob\" matInput [matDatepicker]=\"picker\">\n                                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                                <mat-datepicker #picker></mat-datepicker>\n                            </mat-form-field>\n                            <mat-form-field class=\"full-width\" appearance=\"fill\">\n                                <mat-label>Preferred Location</mat-label>\n                                <mat-select formControlName=\"location\">\n                                    <mat-option *ngFor=\"let pref_loc of pref_loc\" [value]=\"pref_loc.value\">\n                                        {{pref_loc.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                            <div class=\"row\" fxLayout=\"row wrap\">\n                                <mat-radio-group fxLayout=\"row wrap\" formControlName=\"gender\" class=\"margin-left\">\n                                    <mat-label class=\"gen\">\n                                        <p>Gender:</p>\n                                    </mat-label>\n                                    <mat-radio-button value=\"Male\" fxLayout=\"row wrap\" color=\"Secondary\">\n                                        <p>Male</p>\n                                    </mat-radio-button>\n                                    <mat-radio-button value=\"Female\" fxLayoutAlign=\"center\">\n                                        <p>Female</p>\n                                    </mat-radio-button>\n                                </mat-radio-group>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                    <mat-card-actions fxLayoutAlign=\"center\">\n                        <button (click)=\"saveForm()\" mat-raised-button color=\"primary\"> Save &\n                            Continue</button>\n                    </mat-card-actions>\n                </mat-card>\n            </form>\n        </div>\n    </div>\n    <div class=\"example-ripple-container mat-elevation-z4\" matRipple [matRippleCentered]=\"centered\"\n        [matRippleRadius]=\"66\" routerLink=\"/education-details\">\n        <mat-icon><span> arrow_forward_ios</span></mat-icon>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component, OnInit } from '@angular/core';\nimport {ProfileDetailsService} from '../service/profile-details/profile-details.service'\nimport { ProfileDetails } from '../service/profile-details/profile-details';\nimport { PageEvent } from '@angular/material/paginator';\nimport { Route, Router } from '@angular/router';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar,MatSnackBarHorizontalPosition,MatSnackBarVerticalPosition,} from '@angular/material/snack-bar';\ninterface Location {\n  value: string;\n  viewValue: string;\n}\ninterface Experience {\n  value: string;\n  viewValue: string;\n}\ninterface SkillList {\n  value: string;\n  viewValue: string;\n}\ninterface levelList {\n  value: string;\n  viewValue: string;\n}\n\n\n@Component({\n  selector: 'app-profilesearch',\n  templateUrl: './profilesearch.component.html',\n  styleUrls: ['./profilesearch.component.css']\n})\nexport class ProfilesearchComponent implements OnInit{\n  pageEvent: PageEvent;\n  datasource: null;\n  pageIndex:number;\n  pageSize:number;\n  length:number;\n  lowValue: number = 0;\n  highValue: number = 6;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  centered = false;\n  public searchTerm : string='';\n  recommendedobj:ProfileDetails=new ProfileDetails;\n  public userlist:Array<ProfileDetails>=[\n   \n   ]\n  \n  skill:any;\n  level:any;\n  location:any;\n  experience:any;\n\n \n  constructor(private formBuilder:FormBuilder, private profiledetailservice:ProfileDetailsService,private _snackBar: MatSnackBar,private router:Router){}\n    profileForm = this.formBuilder.group({\n      location:['',Validators.required],\n      skill1:['',Validators.required],\n      level1:['',Validators.required],\n     experience:['',Validators.required]   \n    });\n  \n  \n  // profileForm = this.formBuilder.group({});\n  pref_loc: Location[] = [\n    \n    {value: 'Hyderabad', viewValue: 'Hyderabad'},\n    {value: 'banglore', viewValue: 'Banglore'},\n    {value: 'Chennai', viewValue: 'Chennai'},\n    {value: 'Mumbai', viewValue: 'Mumbai'},\n    {value: 'Pune', viewValue: 'Pune'},\n    {value: 'Delhi', viewValue: 'Delhi'},\n    {value: 'Noida', viewValue: 'Noida'},\n    {value: 'Kolkata', viewValue: 'Kolkata'}\n  ];\n  \n  selectedlocation = this.pref_loc[0].value;\n\n  selectlocation(event: Event) {\n    console.log(this.selectedlocation);\n    this.selectedlocation = (event.target as HTMLSelectElement).value;\n   if(!this.selectedskill && !this.selectedexperience && !this.selectedlevel){\n    return this.profiledetailservice.getProductRecommendationsByLocation(this.selectedlocation).subscribe(data=>{\n      this.userlist=data;\n      console.log(this.userlist);\n\n      });\n     }\n     else{\n      this.profiledetailservice.getProductRecommendationsByChoice(this.selectedlocation,this.selectedskill,this.selectedexperience,this.selectedlevel)\n     }\n   }\n  \n  pref_exp: Experience[] = [\n    {value: 'Fresher', viewValue: 'Fresher'},\n    {value: '1 - 2', viewValue: '1 - 2'},\n    {value: '2 - 3', viewValue: '2 - 3'},\n    {value: '3 - 4', viewValue: '3 -4'},\n    {value: '4 - 5', viewValue: '4 - 5'},\n    {value: '5+', viewValue: '5+'},\n  ]\n  selectedexperience = this.pref_loc[0].value;\n\n  selectexperience(event: Event) {\n    console.log(this.selectedexperience);\n    this.selectedexperience = (event.target as HTMLSelectElement).value;\n   if(!this.selectedskill && !this.selectedlevel && !this.selectedlocation){\n    return this.profiledetailservice.getProductRecommendationsByExperience(this.selectedexperience).subscribe(data=>{\n      this.userlist=data;\n      console.log(this.userlist);\n\n      });\n     }\n     else{\n      this.profiledetailservice.getProductRecommendationsByChoice(this.selectedlocation,this.selectedskill,this.selectedexperience,this.selectedlevel)\n     }\n   }\n  pref_skill: SkillList[] = [\n    {value: 'Angular', viewValue: 'Angular'},\n    {value: 'Html', viewValue: 'Html'},\n    {value: 'Css', viewValue: 'Css'},\n    {value: 'Javascript', viewValue: 'Javascript'},\n    {value: 'Neo4j', viewValue: 'Neo4j'},\n    {value: 'C', viewValue: 'C'},\n    {value: 'C++', viewValue: 'C++'},\n    {value: 'Java', viewValue: 'Java'},\n    {value: 'Python', viewValue: 'Python'},   \n  ];\n  selectedskill = this.pref_loc[0].value;\n\n  selectskill(event: Event) {\n    console.log(this.selectedskill);\n    this.selectedskill = (event.target as HTMLSelectElement).value;\n   if(!this.selectedexperience && !this.selectedlocation){\n    return this.profiledetailservice.getProductRecommendationsBySkill(this.selectedskill,this.selectedlevel).subscribe(data=>{\n      this.userlist=data;\n      console.log(this.userlist);\n \n      });\n     }\n     else{\n      this.profiledetailservice.getProductRecommendationsByChoice(this.selectedlocation,this.selectedskill,this.selectedexperience,this.selectedlevel)\n     }\n   }\n  pref_level: levelList[] = [\n    {value: 'Basic', viewValue: 'Basic'},\n    {value: 'Intermediate', viewValue: 'Intermediate'},\n    {value: 'Advance', viewValue: 'Advance'},\n  ];\n  selectedlevel = this.pref_loc[0].value;\n\n  selectlevel(event: Event) {\n    console.log(this.selectedlevel);\n    this.selectedlevel = (event.target as HTMLSelectElement).value;\n   \n    this.profiledetailservice.getProductRecommendationsByChoice(this.selectedlevel,this.selectedexperience,this.selectedlocation,this.selectedskill).subscribe(data=>{\n      this.userlist=data;\n      console.log(this.userlist);\n\n      });\n\n      \n\n     \n   } \n\n  ngOnInit(): void {\n    if(localStorage.getItem(\"SEARCH_KEY\")!=null){\n      var values =  JSON.parse(localStorage.getItem(\"SEARCH_KEY\"));\n      console.log(values);\n        this.profileForm.setValue({\n       location:values.location,\n       skill1:values.skill1,\n       experience:values.experience,\n       level1:values.level1\n     });\n     this.search();\n    }\n\n}\n\npublic getPaginatorData(event: PageEvent): PageEvent {\n  this.lowValue = event.pageIndex * event.pageSize;\n  this.highValue = this.lowValue + event.pageSize;\n  return event;}\n// recommendedobj:ProfileDetails=new ProfileDetails;\n  durationInSeconds = 2;\n  gotomoreinfo(user){\n     console.log(user);\n     localStorage.setItem(\"CURRENT_USER\",JSON.stringify(user));\n\n  }\n  search(){\n    console.log(\"search is calling\");\n    const {skill1,location,level1,experience}=this.profileForm.value\n      this.recommendedobj.skill1=skill1\n      this.recommendedobj.location=location\n      this.recommendedobj.level1=level1\n      this.recommendedobj.experience=experience\n      if(this.recommendedobj.skill1==\"\" &&  this.recommendedobj.level1==\"\" && this.recommendedobj.experience==\"\"){\n        return this.profiledetailservice.getProductRecommendationsByLocation(this.recommendedobj.location).subscribe(data=>{\n          this.userlist=data;\n          console.log(this.userlist);\n    \n          });\n         }\n         if(this.recommendedobj.skill1==\"\" && this.recommendedobj.level1==\"\" && this.recommendedobj.location==\"\"){\n          return this.profiledetailservice.getProductRecommendationsByExperience(this.recommendedobj.experience).subscribe(data=>{\n            this.userlist=data;\n            console.log(this.userlist);\n      \n            });\n           }\n           if(this.recommendedobj.experience==\"\" && this.recommendedobj.location==\"\"){\n            return this.profiledetailservice.getProductRecommendationsBySkill(this.recommendedobj.skill1,this.recommendedobj.level1).subscribe(data=>{\n              this.userlist=data;\n              console.log(this.userlist);\n         \n              });\n             }\n             else{\n    this.profiledetailservice.getProductRecommendationsByChoice(this.recommendedobj.location,this.recommendedobj.skill1,this.recommendedobj.experience,this.recommendedobj.level1).subscribe(\n          (data) => {\n            console.log(data);\n            this.userlist=data;\n            console.log(this.userlist);\n         \n            // alert(\"Education Details Added SuccessFully!!\");\n      \n            \n          },\n          error => (console.log(error)),\n        \n       );\n      }\n  \n}\n\n\n}\nexport class TabGroupPaginatedExample {\n  lotsOfTabs = new Array(30).fill(0).map((_, index) => `Tab ${index}`);\n}","<app-home-navbar></app-home-navbar>\n<form [formGroup]=\"profileForm\">\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n\n\n          <div class=\"b\" fxLayout=\"column wrap\" fxFlex=\"100%\" fxFlex.xs=\"90%\" fxLayoutAlign=\"center center\">\n            <mat-tab-group mat-stretch-tabs=\"false\" mat-align-tabs=\"center\">\n                <mat-tab label=\"Manual\">\n                    <div fxLayout=\"row\" fxFlex.xs=\"100%\" fxlayoutGap=\"15%\" fxLayoutAlign=\"center center\">\n                        <div fxLayout=\"row\" fxFlex.xs=\"100%\" class=\"search-main\" fxLayoutAlign=\"center center\">\n                            <table cellspacing=\"0\">\n                                <tr>\n                                    <!-- <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n\n                                            <input matInput placeholder=\"Ex. FrontEnd devloper\">\n                                        </mat-form-field></td> -->\n                                        <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n                                            <mat-label>Preferred Skill</mat-label>\n                                            <mat-select formControlName=\"skill1\" matNativeControl (change)=\"selectskill($event)\">\n                                                <mat-option *ngFor=\"let pref_skl of pref_skill\"\n                                                    [value]=\"pref_skl.value\" [selected]=\"selectedskill === pref_skl.value\">\n                                                    {{pref_skl.viewValue}}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field></td>\n                                        <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n                                            <mat-label>Preferred Level</mat-label>\n                                            <mat-select  formControlName=\"level1\" matNativeControl (change)=\"selectlevel($event)\">\n                                                <mat-option *ngFor=\"let pref_lvl of pref_level\"\n                                                    [value]=\"pref_lvl.value\" [selected]=\"selectedlevel === pref_lvl.value\">\n                                                    {{pref_lvl.viewValue}}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field></td>\n                                    <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n                                            <mat-label>Preferred Location</mat-label>\n                                            <mat-select  formControlName=\"location\" matNativeControl (change)=\"selectlocation($event)\">\n                                                <mat-option *ngFor=\"let pref_loc of pref_loc\"\n                                                    [value]=\"pref_loc.value\" [selected]=\"selectedlocation === pref_loc.value\">\n                                                    {{pref_loc.viewValue}}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field></td>\n                                    <td><mat-form-field appearance=\"fill\" fxFlex.xs=\"100%\">\n                                            <mat-label>Experience</mat-label>\n                                            <mat-select formControlName=\"experience\" matNativeControl (change)=\"selectexperience($event)\">\n                                                <mat-option *ngFor=\"let pref_exp of pref_exp\"\n                                                    [value]=\"pref_exp.value\"[selected]=\"selectedexperience === pref_exp.value\">\n                                                    {{pref_exp.viewValue}}\n                                                </mat-option>\n                                            </mat-select>\n                                        </mat-form-field></td>\n                                    <td>\n                                        <button mat-raised-button (click)=\"search()\">Search</button>\n                                    </td>\n                                </tr>\n                            </table>\n\n                        </div>\n                    </div>\n                </mat-tab>\n                <mat-tab label=\"Voice\">\n                    <div class=\"voice search-main\" fxLayoutAlign=\"center center\" fxFlex.xs=\"100%\">\n                        <table cellspacing=\"0\">\n                            <tr>\n                                <td><mat-form-field class=\"voice-in\" appearance=\"fill\">\n                                        <input matInput placeholder=\"Voice search....\">\n                                    </mat-form-field></td>\n                                <td>\n                                    <button mat-raised-button><mat-icon matSuffix>mic</mat-icon></button>\n                                </td>\n                            </tr>\n                        </table>\n                    </div>\n                </mat-tab>\n            </mat-tab-group>\n        </div>\n\n\n</div>\n</form>\n\n<mat-paginator style=\"padding-bottom: 20px;background-color: inherit;padding-right:30px;\"\n    [length]=\"this.userlist.length\" pageSize=6 (page)=\"getPaginatorData($event)\" [pageSizeOptions]=\"[6,12, 24, 42]\"\n    showFirstLastButtons=\"false\">\n</mat-paginator>\n<div class=\"flexbox\">\n    <mat-card class=\"example-card\" *ngFor=\"let user of  (userlist |slice: lowValue : highValue)\">\n        <mat-card-header>\n            <mat-card-title style=\"color:black\">{{user.username}}</mat-card-title>\n        </mat-card-header>\n        <mat-card-content>\n            <div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10%\">\n                <div fxLayout=\"row\" fxLayoutGap=\"15%\"><mat-icon>work</mat-icon>{{user.experience}}</div>\n                <div fxLayout=\"row\"><mat-icon>history_edu</mat-icon>{{user.highest_qualification}}</div>\n            </div>\n\n            <div fxLayout=\"row\" fxLayoutAlign=\"center\" fxLayoutGap=\"10%\">\n                <div fxLayout=\"row\"><mat-icon>pin_drop</mat-icon>{{user.location}}</div>\n                <div fxLayout=\"row\"><mat-icon>lan</mat-icon>{{user.skill1}}</div>\n            </div>\n\n        </mat-card-content>\n        <mat-card-actions fxLayoutAlign=\"end\">\n            <a (click)=\"gotomoreinfo(user)\" routerLink=\"/moreinfo\">More Info</a>\n        </mat-card-actions>\n    </mat-card>\n\n</div>\n\n<app-footer></app-footer>","import { Component } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { SendEmail } from '../service/send-email/send-email';\nimport { SendEmailService } from '../service/send-email/send-email.service';\nimport { Route, Router } from '@angular/router';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { MatDialog } from '@angular/material/dialog';\nimport { EmailDialogComponent } from '../email-dialog/email-dialog.component';\n\n@Component({\n  selector: 'app-send-email',\n  templateUrl: './send-email.component.html',\n  styleUrls: ['./send-email.component.css']\n})\nexport class SendEmailComponent {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  centered = false;\n  emailobj:SendEmail=new SendEmail();\n  constructor(private formBuilder:FormBuilder,private router: Router,private emailservice: SendEmailService,private _snackBar: MatSnackBar,public dialog: MatDialog) {}\n    profileForm = this.formBuilder.group({\n      recipient:['',Validators.required],\n      company_name: ['',Validators.required],\n      message:['',Validators.required],\n      recruiter_name:['',Validators.required],     \n    });\n  \n  durationInSeconds = 2;\n  sendmail(){\n    console.log('Form data is ', this.profileForm.value);\n    const {recipient,company_name,message,recruiter_name}=this.profileForm.value\n    this.emailobj.recruiter_name=recruiter_name\n    this.emailobj.recipient=recipient\n    this.emailobj.company_name=company_name\n    this.emailobj.message=message\n    console.log(this.emailobj.recipient);\n    this.emailservice\n      .emailnotification(this.emailobj)\n      .subscribe(\n        (data) => {\n          //  console.log(\"Personal Details Added SuccessFully!!\");\n          // {\n          //   this._snackBar.open('Mail Sent Successfully!', 'close', {\n          //     horizontalPosition: this.horizontalPosition,\n          //     verticalPosition: this.verticalPosition,\n          //     duration: this.durationInSeconds * 1000,\n          //   });\n           \n          // } \n        \n            this.dialog.open(EmailDialogComponent);\n          \n      \n          \n         },\n         error => (console.log(error)),\n      );\n    \n  }\n  \n\n\n}\n","<app-home-navbar></app-home-navbar>\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"contain-content\" fxFlex=\"60%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n    <div class=\"part-prime\" fxFlex=\"75%\" fxFlex.xs=\"100%\">\n        <form class=\"form-container\" [formGroup]=\"profileForm\">\n            <mat-card>\n                <mat-card-header fxLayoutAlign=\"center\">\n                    <mat-card-title>\n                        <h2>Reach Out To The Candidate</h2>\n                    </mat-card-title>\n                </mat-card-header>\n                <mat-card-content>\n                    <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\n                            <mat-label>Your Name</mat-label>\n                                <input    matInput formControlName=\"recruiter_name\" >\n                                <mat-icon matSuffix>person</mat-icon>\n                                <!-- <mat-error *ngIf=\"email.invalid\">{{getErrorMessage()}}</mat-error> -->\n                                \n                            \n                        </mat-form-field>\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\n                            <mat-label>Email Id </mat-label>\n                                <input  matInput formControlName=\"recipient\">\n                                <mat-icon matSuffix>email</mat-icon>\n                           \n                        </mat-form-field>\n                        <mat-form-field class=\"full-width\" appearance=\"fill\">\n                            <mat-label>Company</mat-label>\n                                <input  matInput  formControlName=\"company_name\">\n                                <mat-icon matSuffix>work</mat-icon>\n                                \n                        </mat-form-field>\n                        <!-- <mat-form-field class=\"full-width\">\n                            <div fxLayoutAlign=\"space-evenly center\">\n                                <input  matInput placeholder=\"Designation\">\n                           </div>\n                        </mat-form-field> -->\n                        <mat-form-field class=\"full-width\"appearance=\"fill\">\n                            <mat-label>Message</mat-label>\n                                <textarea  matInput placeholder=\"Message\" formControlName=\"message\"></textarea>\n                                \n\n                        </mat-form-field>\n                        <!-- <mat-checkbox class=\"example-margin\">\n                            <p> By Accepting,you agree to <br> <b>Terms of\n                                    Service</b> and <b>Privacy Policy</b></p>\n                        </mat-checkbox> -->\n                       \n                            <button type=\"submit\" id=\"b1\"  mat-raised-button color=\"primary\" (click)=\"sendmail()\">Send</button>\n                 \n                    <!-- <button type=\"submit\" id=\"b1\" mat-raised-button color=\"primary\"\n                                (click)=\"openDialog()\">Send</button> -->\n                                <button type=\"submit\"  id=\"b2\" mat-raised-button color=\"warn\" routerLink=\"/moreinfo\">Discard</button>\n                    </div>\n                </mat-card-content>\n            </mat-card>\n        </form>\n    </div>\n   </div> \n</div>\n<app-footer></app-footer>","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Educationdetails } from 'src/app/service/education-details/educationdetails';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EducationdetailsService {\n\n  constructor(private httpClient:HttpClient) { }\n\n\n  \n  addApi(educationDetailsData:Educationdetails ) {\n    return this.httpClient.post<any>(\n      \"http://localhost:8080/academics-service/sender\",educationDetailsData\n    );\n  }\n}\n","export class Educationdetails {\n    email:string;\n    highest_qualification:string;\n    specialization:string;\n    institute_name:string;\n    passing_year:string;\n    cgpa:string;\n\n    constructor(){\n        \n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Experiencedetails } from './experiencedetails';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExperiencedetailsService {\n\n  constructor(private httpClient:HttpClient) { }\n\n  addApi(experienceDetailsData:Experiencedetails ) {\n    return this.httpClient.post<any>(\n      \"http://localhost:8080/experience-service/sender\",experienceDetailsData\n    );\n  }\n}\n","export class Experiencedetails {\n    email:string;\n    designation:string;\n    companyname:string;\n    noticeperiod:string;\n    experience:string;\n    currentsalary:string;\n\n    constructor(){\n        \n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { User } from 'src/app/service/login/user';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private httpClient:HttpClient) { }\n  \n\n\n  loginApi(loginData: User) {\n    return this.httpClient.post<any>(\n      \"http://localhost:8080/user-authentication-service/login\",loginData\n    );\n  }\n}","export class User {\n    email:string;\n    password: string;\n\n    constructor(){\n       this.email=\"\",\n       this.password=\"\"\n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PersonalDetails } from 'src/app/service/personal-details/personal-details';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PersonalDetailsService {\n\n  constructor(private httpClient:HttpClient) { }\n  \n\n\n  addApi(PersonalDetailsData: PersonalDetails ) {\n    return this.httpClient.post<any>(\n      \"http://localhost:8080/personal-detail-service/sender\",PersonalDetailsData\n    );\n  }\n}","export class PersonalDetails {\n    email:string;\n    username:string;\n    contactnumber:string;\n    dob:string;\n    gender:string;\n    location:string;\n\n    constructor(){\n        \n    }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ProfileDetails } from './profile-details';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileDetailsService {\n  constructor(private httpClient:HttpClient) { }\n  \n\n\n  private url = 'http://localhost:8080';\n// deletePost(email){\n//     return this.httpClient.delete(this.url+'/'+email);\n//   }\n// deleteMember(email) {\n//   return this.httpClient.delete('http://localhost:8090/profile/delete' + email);\n// }\ndeleteproductbyId(email:any){\n  \n  return this.httpClient.delete<ProfileDetails[]>(this.url+ \"/profile-service/delete/\" + email)\n }\n getProductRecommendationsByLocation(location:String){\n  return this.httpClient.get<ProfileDetails[]>(this.url+ \"/profile-service/recommendByCity/\" +  location)\n }\n getAllProfile(){\n  return this.httpClient.get<ProfileDetails[]>(this.url+ \"/profile-service/getAllProfile\")\n }\n getProductRecommendationsBySkill(skill1:String,level1:String){\n  return this.httpClient.get<ProfileDetails[]>(`${this.url}/profile-service/recommendBySkill/${skill1}/${level1}`)\n }\n getProductRecommendationsBySLE(skill1:String,level1:String,experience:String){\n  return this.httpClient.get<ProfileDetails[]>(`${this.url}/profile-service/recommendBySLE/${skill1}/${level1}/${experience}`)\n }\n getProductRecommendationsBySLL(skill1:String,level1:String,location:String){\n  return this.httpClient.get<ProfileDetails[]>(`${this.url}/profile-service/recommendBySLL/${skill1}/${level1}/${location}`)\n }\n getProductRecommendationsByExperience(experience:String){\n  return this.httpClient.get<ProfileDetails[]>(this.url+ \"/profile-service/recommendByExperience/\" +  experience)\n }\n getProductRecommendationsByChoice(location:String,skill1:String, experience:String,level1:String){\n  return this.httpClient.get<ProfileDetails[]>(`${this.url}/profile-service/recommendByCity/${location}/${skill1}/${experience}/${level1}`)\n  // return this.httpClient.get<ProfileDetails[]>(this.url+ \"/profile/recommendByCity/\" +'?location'+ location  + '?skill1'+skill1 +'?experience'+experience +'?level1'+level1)\n }\n\n\n}\n","export class ProfileDetails {\n    email:string;\n    username:string;\n    contactnumber:string;\n    dob:string;\n    gender:string;\n    location:string;\n    highest_qualification:string;\n    specialization:string;\n    institute_name:string;\n    passing_year:string;\n    cgpa:string;\n    designation:string;\n    companyname:string;\n    noticeperiod:string;\n    experience:string;\n    currentsalary:string;\n    skill1:string;\n    skill2:string;\n    skill3:string;\n    level1:string;\n    level2:string;\n    level3:string;\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\nimport { UserRegistration } from './user-registration';\n// import { Register } from 'src/app/register';\n\n// import { RegisterService } from '../register/register.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterService {\n\n      // baseUrl=\"http://localhost:8081/api/v1/register\"\n    \n\n  constructor(private httpClient: HttpClient) { }\n\n\n  registerApi(registerData: UserRegistration){\n    return this.httpClient.post<any>(\n      \"http://localhost:8080/user-authentication-service/register\",registerData\n    );\n  }\n}","export class UserRegistration {\n\n  email:String;\n  password: String;\n  cpassword: String;\n \n\n  constructor() {\n    this.email = \"\";\n    this.password = \"\";\n    this.cpassword = \"\";   \n  }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SendEmail } from './send-email';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SendEmailService {\n  baseUrl=\"http://localhost:8080\";\n  \n\n  constructor(private httpClient: HttpClient) { }\n\n\n  emailnotification(details: SendEmail): Observable<Object> {\n     return this.httpClient.post(this.baseUrl+\"/email-service/sendMailWithAttachment\",details);\n  }\n\n}\n","export class SendEmail {\n    recipient:string;\n    company_name:string;\n    recruiter_name:string;\n    message:string;\n    textt:string;\n    subject:string;\n    msgBody:string;\n}\n","export class SkillDetails {\n    email:string;\n    skill1:string;\n    skill2:string;\n    skill3:string;\n    level1:string;\n    level2:string;\n    level3:string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { SkillDetails } from './skill-details';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SkillDetaisService {\n\n  \n    constructor(private httpClient:HttpClient) { }\n\n    addApi(skillDetailsData:SkillDetails ) {\n      return this.httpClient.post<any>(\n        \"http://localhost:8080/skill-service/sender\",skillDetailsData\n      );\n    }\n  }\n\n","import { Component, OnInit  } from '@angular/core';\nimport { RegisterService } from \"../service/register/register.service\";\nimport { UserRegistration } from \"../service/register/user-registration\";\nimport { Router } from \"@angular/router\";\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\nimport { ErrorStateMatcher } from '@angular/material/core';\nimport { FormControl, FormGroupDirective, NgForm, FormGroup, FormBuilder, Validators } from '@angular/forms';\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\n    const isSubmitted = form && form.submitted;\n    return !!(control && control.invalid);\n  }\n}\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent {\n  minPw = 8;\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n\n  centered = false;\n  hide = true;\n  user: UserRegistration = new UserRegistration();\n  errorMessage: String = \"\";\n  registerData:RegisterService;\n\n  emailPattern = new RegExp(\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n  );\n  passwordPattern = new RegExp(\n    /(?=.[0-9])(?=.[!@#$%^&])[a-zA-Z0-9!@#$%^&]{8,10}/\n  );\n\n  matcher = new MyErrorStateMatcher();\n   password = new FormControl('', [Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/)]);\n\n  passwordErrorStateMatcher: ErrorStateMatcher = {\n    isErrorState: (control: FormControl) => {\n      return control.dirty && control.invalid;\n    }\n  };\n    \n  constructor(private registerService: RegisterService,private router: Router, private formBuilder: FormBuilder,private _snackBar: MatSnackBar){}\n  profileForm = this.formBuilder.group({\n    email:['',Validators.email],\n    password:['',Validators.required],\n    cpassword:['',Validators.required],\n    checkbox: [false]\n  });\n  \n  // get email(): String {\n  //   return this. profileForm.get('email');\n  // }\n  // get password(): String {\n  //   return this.profileForm.get('password');\n  // }\n\n  // get cpassword(): String {\n  //   return this.profileForm.get('cpassword');\n  // }\n  ngOnInit():void {\n  \n\n  }\n  durationInSeconds = 2;\n  saveForm(){\n    console.log('Form data is ', this.profileForm.value);\n    \n    console.log(this.user);\n    const {email,password,cpassword}=this.profileForm.value\n    if (\n      email == \"\" \n      // password == \"\" ||\n      // cpassword == \"\"\n    ) {\n        // alert(\"Fields cannot be empty!\")\n        this._snackBar.open('Fields cannot be empty!', 'close', {\n          horizontalPosition: this.horizontalPosition,\n          verticalPosition: this.verticalPosition,\n          duration: this.durationInSeconds * 1000,\n        });\n     \n    } \n    else if (password != cpassword) {\n      // alert(\"password must be same\")\n      this._snackBar.open('Password must be same!', 'close', {\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n        duration: this.durationInSeconds * 1000,\n      });\n    }\n    \n    else if (!this.profileForm.value.checkbox ){\n        this._snackBar.open('Accept Terms and Conditions!', 'close', {\n        horizontalPosition: this.horizontalPosition,\n        verticalPosition: this.verticalPosition,\n        duration: this.durationInSeconds * 1000,\n      });\n\n    }\n      \n   \n     else {\n      this.user.email=email\n      this.user.password=password\n      this.user.cpassword=cpassword\n\n      this.registerService.registerApi(this.user).subscribe(\n        (data) => {\n          // alert(\"Successfully Registered !!\");\n          this._snackBar.open('Successfully Registered !!', 'close', {\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,\n          });\n         \n        },\n        error => (console.log(error)),\n      \n     );\n\n\n      this.router.navigate([\"/login\"]);\n    }\n  }\n  checked = false;\n  \n  email = new FormControl('', [Validators.required, Validators.email]);\n  RememberMe = false;\n   \n\n    \n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n  }\n\n \n\n","<div class=\"main-container\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\n    <div class=\"contain-images\" fxLayout=\"column wrap\" fxFlex=\"40%\" fxShow fxHide.xs>\n        <div class=\"logo-view\" fxFlex=\"50%\">\n            <button class=\"logo\" routerLink=\"/main-homepage\"><img src=\" /assets/img/logo.png\" alt=\"\" srcset=\"\"\n                    height=\"150px\" fxFlex.sm=\"90%\"></button>\n\n        </div>\n        <div class=\"illustrate-view\" fxFlex=\"50%\">\n            <div class=\"container-x\" fxLayout=\"row\" fxLayoutAlign=\"end end\">\n                <img src=\" /assets/img/augmented_reality.svg\" alt=\"\" srcset=\"\" height=\"200px\" fxFlex.sm=\"90%\">\n            </div>\n        </div>\n    </div>\n    <div class=\"contain-content\" fxFlex=\"60%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"50%\" fxFlex.xs=\"85%\">\n            <form class=\"form-container\" [formGroup]=\"profileForm\">\n                <mat-card>\n                    <mat-card-header fxLayoutAlign=\"center\">\n                        <mat-card-title>\n                            <h2>Create new Account</h2>\n                        </mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div fxLayout=\"column\" fxLayoutAlign=\"center center\">\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n\n                                <mat-label>Email</mat-label>\n                                <input formControlName=\"email\" matInput [errorStateMatcher]=\"matcher\">\n                                <mat-icon matSuffix>email</mat-icon>\n                                <mat-error\n                                    *ngIf=\"profileForm.get('email').hasError && !profileForm.get('email').hasError('required')\">\n                                    Please enter a valid email address\n                                </mat-error>\n                                <mat-error *ngIf=\"profileForm.get('email').hasError('required')\">\n                                    Email is <strong>required</strong>\n                                </mat-error>\n                            </mat-form-field>\n                            <!-- <mat-form-field class=\"full-width\">\n                                <div fxLayoutAlign=\"space-evenly center\">\n                                    <input formControlName=\"password\" [pattern]=\"passwordPattern\" type=\"password\"\n                                        matInput placeholder=\"Password\">\n                                    <mat-icon>lock</mat-icon>\n                                </div>\n                            </mat-form-field> -->\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                                <mat-label>Enter password</mat-label>\n                                <input formControlName=\"password\" type=\"password\" matInput\n                                    [type]=\"hide ? 'password' : 'text'\" [errorStateMatcher]=\"passwordErrorStateMatcher\"\n                                    placeholder=\"Password\">\n                                <mat-error *ngIf=\"profileForm.get('password').hasError('password')\">\n                                    Password is <strong>required</strong>\n                                </mat-error>\n                                <!-- <mat-error *ngIf=\"profileForm.get('password').hasError('required')\">\n                                  \n                        \n                                </mat-error>\n                                <mat-error *ngIf=\"profileForm.get('password').hasError('pattern')\">\n                                  Password must be at least 8 charc  -->\n                                <!-- acters long and must contain at least one lowercase letter, one uppercase letter, and one digit -->\n                                <!-- </mat-error> -->\n                                <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                </button>\n\n                            </mat-form-field>\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                                <mat-label>Confirm password</mat-label>\n                                <input formControlName=\"cpassword\" type=\"password\" matInput\n                                    [type]=\"hide ? 'password' : 'text'\" [errorStateMatcher]=\"passwordErrorStateMatcher\"\n                                    placeholder=\"Confirm Password\">\n                                <mat-error *ngIf=\"profileForm.get('password').hasError('required')\">\n\n\n                                </mat-error>\n                                <mat-error *ngIf=\"profileForm.get('password').hasError('pattern')\">\n                                    Password must be at least 8 charc\n                                    <!-- acters long and must contain at least one lowercase letter, one uppercase letter, and one digit -->\n                                </mat-error>\n                                <button mat-icon-button matSuffix (click)=\"hide = !hide\"\n                                    [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                                </button>\n\n                            </mat-form-field>\n                            <mat-checkbox id=\"checkbox\" class=\"checkbox\" color=\"primary\" formControlName=\"checkbox\">\n                                <p> By Accepting,you agree to <br> <b>Terms of\n                                        Service</b> and <b>Privacy Policy</b></p>\n                            </mat-checkbox>\n                            <mat-card-actions fxLayoutAlign=\"center\">\n                                <button [disabled]=\"false\" (click)=\"saveForm()\" mat-raised-button color=\"primary\">Sign\n                                    up</button>\n                            </mat-card-actions>\n                            <div>\n                                <p> Already have an Account ? <a routerLink=\"/login\">Sign in</a></p>\n                            </div>\n                        </div>\n                    </mat-card-content>\n                </mat-card>\n            </form>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport{SkillDetails} from '../service/skill-details/skill-details';\nimport{SkillDetaisService} from '../service/skill-details/skill-detais.service';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport {MatChipEditedEvent, MatChipInputEvent} from '@angular/material/chips';\nimport {\n  MatSnackBar,\n  MatSnackBarHorizontalPosition,\n  MatSnackBarVerticalPosition,\n} from '@angular/material/snack-bar';\ninterface SkillList{\n  value: string;\n  viewValue: string;\n}\ninterface levelList{\n  value: string;\n  viewValue: string;\n}\nexport interface Skill {\n  name: string;\n  level:string;\n}\n\n@Component({\n  selector: 'app-skill-details',\n  templateUrl: './skill-details.component.html',\n  styleUrls: ['./skill-details.component.css']\n})\nexport class SkillDetailsComponent implements OnInit {\n  horizontalPosition: MatSnackBarHorizontalPosition = 'center';\n  verticalPosition: MatSnackBarVerticalPosition = 'top';\n  centered = false;\n  user: SkillDetails = new SkillDetails();\n  registerData:SkillDetaisService;\n  selectedSkill1: string;\n  selectedLevel1: string;\n  selectedSkill2: string;\n  selectedLevel2: string;\n  selectedSkill3: string;\n  selectedLevel3: string;\n  pref_skill: SkillList[] = [\n    {value: 'Angular', viewValue: 'Angular'},\n    {value: 'Html', viewValue: 'Html'},\n    {value: 'Css', viewValue: 'Css'},\n    {value: 'Javascript', viewValue: 'JavaScript'},\n    {value: 'Neo4j', viewValue: 'Neo4j'},\n    {value: 'C', viewValue: 'C'},\n    {value: 'C++', viewValue: 'C++'},\n    {value: 'Java', viewValue: 'Java'},\n    {value: 'Python', viewValue: 'Python'},   \n  ];\n \n  pref_level: levelList[] = [\n    {value: 'Basic', viewValue: 'Basic'},\n    {value: 'Intermediate', viewValue: 'Intermediate'},\n    {value: 'Advance', viewValue: 'Advance'},\n  ];\n\n  \n  constructor(private formBuilder:FormBuilder,private skilldetailservice:SkillDetaisService,private router:Router,private _snackBar: MatSnackBar){}\n  profileForm = this.formBuilder.group({\n    email:['',Validators.required],\n    skill1:['',Validators.required],\n    level1:['',Validators.required],\n    skill2:['',Validators.required],\n    level2:['',Validators.required],\n    skill3:['',Validators.required],\n    level3:['',Validators.required],\n    \n  });\n  ngOnInit():void {\n    // this.email=localStorage.getItem('loginEmail')\n  \n    if(localStorage.getItem(\"STEP_4\")){\n      var values =  JSON.parse(localStorage.getItem(\"STEP_4\"));\n      console.log(values);\n        this.profileForm.setValue({\n       email:values.email,\n       skill1:values.skill1,\n       level1:values.level1,\n       skill2:values.skill2,\n       level2:values.level2,\n       skill3:values.skill3,\n       level3:values.level3,\n\n       });\n  \n  }}\n  durationInSeconds = 2;\n  saveForm(){\n    console.log('Form data is ', this.profileForm.value);\n    localStorage.setItem(\"STEP_4\",JSON.stringify(this.profileForm.value));\n    const {email,skill1,level1,skill2,level2,skill3,level3}=this.profileForm.value\n    this.user.email=localStorage.getItem('loginEmail')\n    this.user.skill1=skill1;\n    this.user.skill2=skill2;\n    this.user.skill3=skill3;\n    this.user.level1=level1;\n    this.user.level2=level2;\n    this.user.level3=level3;\n    if (\n      skill1 == \"\" && level1 == \"\" \n      // && skill2 == \"\" && level2 ==\"\" && skill3==\"\" && level3\n      ) {\n        // alert(\"Fields cannot be empty!\")\n        {\n          this._snackBar.open('Enter Any One Skill & Level!', 'close', {\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,\n            duration: this.durationInSeconds * 1000,\n          });\n         \n        }\n     \n    } \n    else{\n      this.router.navigate([\"/my-profile\"]);\n    this.skilldetailservice.addApi(this.user).subscribe(\n      (data) => {\n        // alert(\"Education Details Added SuccessFully!!\");\n        {\n          this._snackBar.open('Skill Details Added SuccessFully!!', 'close', {\n            horizontalPosition: this.horizontalPosition,\n            verticalPosition: this.verticalPosition,\n            duration: this.durationInSeconds * 1000,\n          });\n         \n        } \n      \n        \n      },\n      \n      error => (console.log(error)),\n    \n   );\n    }\n\n  }\n\n\n}","<app-topnavbar></app-topnavbar>\n<div class=\"p1\" fxLayout=\"row\" fxLayoutAlign=\"center center\">\n    <div class=\"example-ripple-container mat-elevation-z4\" matRipple [matRippleCentered]=\"centered\"\n        [matRippleRadius]=\"66\" routerLink=\"/experience-details\">\n        <mat-icon><span> arrow_back_ios</span></mat-icon>\n    </div>\n    <div class=\"contain-content\" fxFlex=\"60%\" fxFlex.xs=\"100%\" fxLayoutAlign=\"center center\">\n        <div class=\"part-prime\" fxFlex=\"75%\" fxFlex.xs=\"100%\">\n            <form class=\"form-container\" [formGroup]=\"profileForm\">\n                <mat-card>\n                    <mat-card-header fxLayoutAlign=\"center\">\n                        <mat-card-title>\n                            <h2>Skills</h2>\n                        </mat-card-title>\n                    </mat-card-header>\n                    <mat-card-content>\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\">\n\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                                <mat-label>Skill-1 Name</mat-label>\n                                <mat-select formControlName=\"skill1\">\n                                    <mat-option *ngFor=\"let pref_skill1 of pref_skill\" [value]=\"pref_skill1.value\">\n                                        {{pref_skill1.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                                <mat-label>Skill-1 Level</mat-label>\n                                <mat-select formControlName=\"level1\">\n                                    <mat-option *ngFor=\"let pref_level1 of pref_level\" [value]=\"pref_level1.value\">\n                                        {{pref_level1.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\">\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                                <mat-label>Skill-2 Name</mat-label>\n                                <mat-select formControlName=\"skill2\">\n                                    <mat-option *ngFor=\"let pref_skill2 of pref_skill\" [value]=\"pref_skill2.value\">\n                                        {{pref_skill2.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                                <mat-label>Skill-2 Level</mat-label>\n                                <mat-select formControlName=\"level2\">\n                                    <mat-option *ngFor=\"let pref_level2 of pref_level\" [value]=\"pref_level2.value\">\n                                        {{pref_level2.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                        <div fxLayout=\"row\" fxLayoutAlign=\"center center\" fxLayoutGap=\"10px\">\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                                <mat-label>Skill-3 Name</mat-label>\n                                <mat-select formControlName=\"skill3\">\n                                    <mat-option *ngFor=\"let pref_skill3 of pref_skill\" [value]=\"pref_skill3.value\">\n                                        {{pref_skill3.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n\n                            <mat-form-field appearance=\"fill\" class=\"full-width\">\n                                <mat-label>Skill-3 Level</mat-label>\n                                <mat-select formControlName=\"level3\">\n                                    <mat-option *ngFor=\"let pref_level3 of pref_level\" [value]=\"pref_level3.value\">\n                                        {{pref_level3.viewValue}}\n                                    </mat-option>\n                                </mat-select>\n                            </mat-form-field>\n                        </div>\n                    </mat-card-content>\n                    <mat-card-actions fxLayoutAlign=\"center\">\n                        <button (click)=\"saveForm()\" mat-raised-button color=\"primary\">Save\n                        </button>\n                    </mat-card-actions>\n                </mat-card>\n            </form>\n        </div>\n    </div>\n    <div class=\"example-ripple-container mat-elevation-z4\" matRipple [matRippleCentered]=\"centered\"\n        [matRippleRadius]=\"66\">\n        <mat-icon><span> </span></mat-icon>\n    </div>\n</div>\n<app-footer></app-footer>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-topnavbar',\n  templateUrl: './topnavbar.component.html',\n  styleUrls: ['./topnavbar.component.css']\n})\nexport class TopnavbarComponent {\n\n}\n","<nav class=\"main-container\" fxLayout=\"row wrap\" fxLayoutAlign=\"center center\">\n    <div class=\"contain-images\" fxLayout=\"row\" fxFlex=\"95%\" fxLayoutAlign=\"space-between center\">\n        <div><button class=\"logo\" routerLink=\"/homepage\"><img src=\"/assets/img/logo.png\" height=60px></button></div>\n        <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around center\" fxFlex=\"50%\">\n\n        </div>\n        <div fxLayoutAlign=\"center center\">\n            <button mat-button [matMenuTriggerFor]=\"beforeMenu\" height=\"100px\"><img src=\"/assets/img/avatar.svg\" alt=\"\"\n                    srcset=\"\" height=\"60px\"></button>\n            <mat-menu #beforeMenu=\"matMenu\" height=\"100px\" xPosition=\"before\">\n                <button mat-menu-item routerLink=\"/my-profile\">\n                    <p>My Profile</p>\n                </button>\n                <button mat-menu-item routerLink=\"/main-homepage\">\n                    <p>Sign Out</p>\n                </button>\n            </mat-menu>\n        </div>\n    </div>\n</nav>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["RouterModule","EducationDetailsComponent","ExperienceDetailsComponent","HomepageComponent","LoginComponent","MainHomepageComponent","MoreinfoComponent","MyProfileComponent","PersonalDetailsComponent","SendEmailComponent","ProfilesearchComponent","SignupComponent","SkillDetailsComponent","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","BrowserAnimationsModule","MatProgressBarModule","MatExpansionModule","MatIconModule","MatBadgeModule","FlexLayoutModule","MatRadioModule","MatCardModule","MatFormFieldModule","MatSelectModule","MatInputModule","MatDatepickerModule","MatNativeDateModule","MatButtonModule","FormsModule","ReactiveFormsModule","MatChipsModule","MatRippleModule","MatCheckboxModule","HttpClientModule","MatSnackBarModule","MatTooltipModule","MatTableModule","MatMenuModule","MatDividerModule","MatListModule","MatTabsModule","MatGridListModule","MatPaginatorModule","MatToolbarModule","MatDialogModule","TopnavbarComponent","FooterComponent","HomeNavbarComponent","BrowserModule","EmailDialogComponent","AppModule","bootstrap","declarations","FormControl","FormGroup","Validators","Educationdetails","MyErrorStateMatcher","isErrorState","control","form","isSubmitted","submitted","invalid","formBuilder","educationdetailservice","router","_snackBar","ngOnInit","profileForm","email","highest_qualification","required","specialization","institute_name","passing_year","pattern","cgpa","localStorage","getItem","values","JSON","parse","console","log","setValue","saveForm","value","setItem","stringify","user","open","horizontalPosition","verticalPosition","duration","durationInSeconds","navigate","addApi","subscribe","data","error","consts","ctx","Experiencedetails","experiencedetailservice","viewValue","designation","companyname","currentsalary","noticeperiod","experience","User","loginService","group","password","checkbox","onSubmit","loginObj","loginApi","reset","errorMessage","getErrorMessage","hasError","ProfileDetails","profiledetailservice","location","skill1","level1","pref_loc","selectlocation","event","selectedlocation","target","selectedskill","selectedexperience","selectedlevel","getProductRecommendationsByLocation","abc","getProductRecommendationsByChoice","selectexperience","getProductRecommendationsByExperience","selectskill","getProductRecommendationsBySkill","selectlevel","search","username","dob","gender","contactnumber","skill2","skill3","level2","level3","deleteprofile","deleteproductbyId","window","removeItem","PersonalDetails","personalDetailservice","RegExp","userlist","getPaginatorData","lowValue","pageIndex","pageSize","highValue","gotomoreinfo","recommendedobj","TabGroupPaginatedExample","Array","fill","map","_","index","SendEmail","emailservice","dialog","recipient","company_name","message","recruiter_name","sendmail","emailobj","emailnotification","EducationdetailsService","httpClient","educationDetailsData","post","factory","providedIn","ExperiencedetailsService","experienceDetailsData","LoginService","loginData","PersonalDetailsService","PersonalDetailsData","ProfileDetailsService","delete","url","get","getAllProfile","getProductRecommendationsBySLE","getProductRecommendationsBySLL","RegisterService","registerApi","registerData","UserRegistration","cpassword","SendEmailService","details","baseUrl","SkillDetails","SkillDetaisService","skillDetailsData","registerService","dirty","skilldetailservice","environment","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}